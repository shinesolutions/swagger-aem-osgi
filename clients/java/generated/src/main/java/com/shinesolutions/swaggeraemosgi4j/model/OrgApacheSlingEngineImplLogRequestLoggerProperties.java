/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrgApacheSlingEngineImplLogRequestLoggerProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class OrgApacheSlingEngineImplLogRequestLoggerProperties {
  public static final String SERIALIZED_NAME_REQUEST_LOG_OUTPUT = "request.log.output";
  @SerializedName(SERIALIZED_NAME_REQUEST_LOG_OUTPUT)
  private ConfigNodePropertyString requestLogOutput;

  public static final String SERIALIZED_NAME_REQUEST_LOG_OUTPUTTYPE = "request.log.outputtype";
  @SerializedName(SERIALIZED_NAME_REQUEST_LOG_OUTPUTTYPE)
  private ConfigNodePropertyDropDown requestLogOutputtype;

  public static final String SERIALIZED_NAME_REQUEST_LOG_ENABLED = "request.log.enabled";
  @SerializedName(SERIALIZED_NAME_REQUEST_LOG_ENABLED)
  private ConfigNodePropertyBoolean requestLogEnabled;

  public static final String SERIALIZED_NAME_ACCESS_LOG_OUTPUT = "access.log.output";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_OUTPUT)
  private ConfigNodePropertyString accessLogOutput;

  public static final String SERIALIZED_NAME_ACCESS_LOG_OUTPUTTYPE = "access.log.outputtype";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_OUTPUTTYPE)
  private ConfigNodePropertyDropDown accessLogOutputtype;

  public static final String SERIALIZED_NAME_ACCESS_LOG_ENABLED = "access.log.enabled";
  @SerializedName(SERIALIZED_NAME_ACCESS_LOG_ENABLED)
  private ConfigNodePropertyBoolean accessLogEnabled;


  public OrgApacheSlingEngineImplLogRequestLoggerProperties requestLogOutput(ConfigNodePropertyString requestLogOutput) {
    
    this.requestLogOutput = requestLogOutput;
    return this;
  }

   /**
   * Get requestLogOutput
   * @return requestLogOutput
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getRequestLogOutput() {
    return requestLogOutput;
  }


  public void setRequestLogOutput(ConfigNodePropertyString requestLogOutput) {
    this.requestLogOutput = requestLogOutput;
  }


  public OrgApacheSlingEngineImplLogRequestLoggerProperties requestLogOutputtype(ConfigNodePropertyDropDown requestLogOutputtype) {
    
    this.requestLogOutputtype = requestLogOutputtype;
    return this;
  }

   /**
   * Get requestLogOutputtype
   * @return requestLogOutputtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyDropDown getRequestLogOutputtype() {
    return requestLogOutputtype;
  }


  public void setRequestLogOutputtype(ConfigNodePropertyDropDown requestLogOutputtype) {
    this.requestLogOutputtype = requestLogOutputtype;
  }


  public OrgApacheSlingEngineImplLogRequestLoggerProperties requestLogEnabled(ConfigNodePropertyBoolean requestLogEnabled) {
    
    this.requestLogEnabled = requestLogEnabled;
    return this;
  }

   /**
   * Get requestLogEnabled
   * @return requestLogEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getRequestLogEnabled() {
    return requestLogEnabled;
  }


  public void setRequestLogEnabled(ConfigNodePropertyBoolean requestLogEnabled) {
    this.requestLogEnabled = requestLogEnabled;
  }


  public OrgApacheSlingEngineImplLogRequestLoggerProperties accessLogOutput(ConfigNodePropertyString accessLogOutput) {
    
    this.accessLogOutput = accessLogOutput;
    return this;
  }

   /**
   * Get accessLogOutput
   * @return accessLogOutput
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAccessLogOutput() {
    return accessLogOutput;
  }


  public void setAccessLogOutput(ConfigNodePropertyString accessLogOutput) {
    this.accessLogOutput = accessLogOutput;
  }


  public OrgApacheSlingEngineImplLogRequestLoggerProperties accessLogOutputtype(ConfigNodePropertyDropDown accessLogOutputtype) {
    
    this.accessLogOutputtype = accessLogOutputtype;
    return this;
  }

   /**
   * Get accessLogOutputtype
   * @return accessLogOutputtype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyDropDown getAccessLogOutputtype() {
    return accessLogOutputtype;
  }


  public void setAccessLogOutputtype(ConfigNodePropertyDropDown accessLogOutputtype) {
    this.accessLogOutputtype = accessLogOutputtype;
  }


  public OrgApacheSlingEngineImplLogRequestLoggerProperties accessLogEnabled(ConfigNodePropertyBoolean accessLogEnabled) {
    
    this.accessLogEnabled = accessLogEnabled;
    return this;
  }

   /**
   * Get accessLogEnabled
   * @return accessLogEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getAccessLogEnabled() {
    return accessLogEnabled;
  }


  public void setAccessLogEnabled(ConfigNodePropertyBoolean accessLogEnabled) {
    this.accessLogEnabled = accessLogEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingEngineImplLogRequestLoggerProperties orgApacheSlingEngineImplLogRequestLoggerProperties = (OrgApacheSlingEngineImplLogRequestLoggerProperties) o;
    return Objects.equals(this.requestLogOutput, orgApacheSlingEngineImplLogRequestLoggerProperties.requestLogOutput) &&
        Objects.equals(this.requestLogOutputtype, orgApacheSlingEngineImplLogRequestLoggerProperties.requestLogOutputtype) &&
        Objects.equals(this.requestLogEnabled, orgApacheSlingEngineImplLogRequestLoggerProperties.requestLogEnabled) &&
        Objects.equals(this.accessLogOutput, orgApacheSlingEngineImplLogRequestLoggerProperties.accessLogOutput) &&
        Objects.equals(this.accessLogOutputtype, orgApacheSlingEngineImplLogRequestLoggerProperties.accessLogOutputtype) &&
        Objects.equals(this.accessLogEnabled, orgApacheSlingEngineImplLogRequestLoggerProperties.accessLogEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestLogOutput, requestLogOutputtype, requestLogEnabled, accessLogOutput, accessLogOutputtype, accessLogEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingEngineImplLogRequestLoggerProperties {\n");
    sb.append("    requestLogOutput: ").append(toIndentedString(requestLogOutput)).append("\n");
    sb.append("    requestLogOutputtype: ").append(toIndentedString(requestLogOutputtype)).append("\n");
    sb.append("    requestLogEnabled: ").append(toIndentedString(requestLogEnabled)).append("\n");
    sb.append("    accessLogOutput: ").append(toIndentedString(accessLogOutput)).append("\n");
    sb.append("    accessLogOutputtype: ").append(toIndentedString(accessLogOutputtype)).append("\n");
    sb.append("    accessLogEnabled: ").append(toIndentedString(accessLogEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

