/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ComAdobeGraniteAuthOauthAccesstokenProviderProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class ComAdobeGraniteAuthOauthAccesstokenProviderProperties {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private ConfigNodePropertyString name;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_TITLE = "auth.token.provider.title";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_TITLE)
  private ConfigNodePropertyString authTokenProviderTitle;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_DEFAULT_CLAIMS = "auth.token.provider.default.claims";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_DEFAULT_CLAIMS)
  private ConfigNodePropertyArray authTokenProviderDefaultClaims;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_ENDPOINT = "auth.token.provider.endpoint";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_ENDPOINT)
  private ConfigNodePropertyString authTokenProviderEndpoint;

  public static final String SERIALIZED_NAME_AUTH_ACCESS_TOKEN_REQUEST = "auth.access.token.request";
  @SerializedName(SERIALIZED_NAME_AUTH_ACCESS_TOKEN_REQUEST)
  private ConfigNodePropertyString authAccessTokenRequest;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_KEYPAIR_ALIAS = "auth.token.provider.keypair.alias";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_KEYPAIR_ALIAS)
  private ConfigNodePropertyString authTokenProviderKeypairAlias;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_CONN_TIMEOUT = "auth.token.provider.conn.timeout";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_CONN_TIMEOUT)
  private ConfigNodePropertyInteger authTokenProviderConnTimeout;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_SO_TIMEOUT = "auth.token.provider.so.timeout";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_SO_TIMEOUT)
  private ConfigNodePropertyInteger authTokenProviderSoTimeout;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_CLIENT_ID = "auth.token.provider.client.id";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_CLIENT_ID)
  private ConfigNodePropertyString authTokenProviderClientId;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_SCOPE = "auth.token.provider.scope";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_SCOPE)
  private ConfigNodePropertyString authTokenProviderScope;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_REUSE_ACCESS_TOKEN = "auth.token.provider.reuse.access.token";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_REUSE_ACCESS_TOKEN)
  private ConfigNodePropertyBoolean authTokenProviderReuseAccessToken;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_RELAXED_SSL = "auth.token.provider.relaxed.ssl";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_PROVIDER_RELAXED_SSL)
  private ConfigNodePropertyBoolean authTokenProviderRelaxedSsl;

  public static final String SERIALIZED_NAME_TOKEN_REQUEST_CUSTOMIZER_TYPE = "token.request.customizer.type";
  @SerializedName(SERIALIZED_NAME_TOKEN_REQUEST_CUSTOMIZER_TYPE)
  private ConfigNodePropertyString tokenRequestCustomizerType;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_VALIDATOR_TYPE = "auth.token.validator.type";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_VALIDATOR_TYPE)
  private ConfigNodePropertyString authTokenValidatorType;


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties name(ConfigNodePropertyString name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getName() {
    return name;
  }


  public void setName(ConfigNodePropertyString name) {
    this.name = name;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderTitle(ConfigNodePropertyString authTokenProviderTitle) {
    
    this.authTokenProviderTitle = authTokenProviderTitle;
    return this;
  }

   /**
   * Get authTokenProviderTitle
   * @return authTokenProviderTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenProviderTitle() {
    return authTokenProviderTitle;
  }


  public void setAuthTokenProviderTitle(ConfigNodePropertyString authTokenProviderTitle) {
    this.authTokenProviderTitle = authTokenProviderTitle;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderDefaultClaims(ConfigNodePropertyArray authTokenProviderDefaultClaims) {
    
    this.authTokenProviderDefaultClaims = authTokenProviderDefaultClaims;
    return this;
  }

   /**
   * Get authTokenProviderDefaultClaims
   * @return authTokenProviderDefaultClaims
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getAuthTokenProviderDefaultClaims() {
    return authTokenProviderDefaultClaims;
  }


  public void setAuthTokenProviderDefaultClaims(ConfigNodePropertyArray authTokenProviderDefaultClaims) {
    this.authTokenProviderDefaultClaims = authTokenProviderDefaultClaims;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderEndpoint(ConfigNodePropertyString authTokenProviderEndpoint) {
    
    this.authTokenProviderEndpoint = authTokenProviderEndpoint;
    return this;
  }

   /**
   * Get authTokenProviderEndpoint
   * @return authTokenProviderEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenProviderEndpoint() {
    return authTokenProviderEndpoint;
  }


  public void setAuthTokenProviderEndpoint(ConfigNodePropertyString authTokenProviderEndpoint) {
    this.authTokenProviderEndpoint = authTokenProviderEndpoint;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authAccessTokenRequest(ConfigNodePropertyString authAccessTokenRequest) {
    
    this.authAccessTokenRequest = authAccessTokenRequest;
    return this;
  }

   /**
   * Get authAccessTokenRequest
   * @return authAccessTokenRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthAccessTokenRequest() {
    return authAccessTokenRequest;
  }


  public void setAuthAccessTokenRequest(ConfigNodePropertyString authAccessTokenRequest) {
    this.authAccessTokenRequest = authAccessTokenRequest;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderKeypairAlias(ConfigNodePropertyString authTokenProviderKeypairAlias) {
    
    this.authTokenProviderKeypairAlias = authTokenProviderKeypairAlias;
    return this;
  }

   /**
   * Get authTokenProviderKeypairAlias
   * @return authTokenProviderKeypairAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenProviderKeypairAlias() {
    return authTokenProviderKeypairAlias;
  }


  public void setAuthTokenProviderKeypairAlias(ConfigNodePropertyString authTokenProviderKeypairAlias) {
    this.authTokenProviderKeypairAlias = authTokenProviderKeypairAlias;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderConnTimeout(ConfigNodePropertyInteger authTokenProviderConnTimeout) {
    
    this.authTokenProviderConnTimeout = authTokenProviderConnTimeout;
    return this;
  }

   /**
   * Get authTokenProviderConnTimeout
   * @return authTokenProviderConnTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getAuthTokenProviderConnTimeout() {
    return authTokenProviderConnTimeout;
  }


  public void setAuthTokenProviderConnTimeout(ConfigNodePropertyInteger authTokenProviderConnTimeout) {
    this.authTokenProviderConnTimeout = authTokenProviderConnTimeout;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderSoTimeout(ConfigNodePropertyInteger authTokenProviderSoTimeout) {
    
    this.authTokenProviderSoTimeout = authTokenProviderSoTimeout;
    return this;
  }

   /**
   * Get authTokenProviderSoTimeout
   * @return authTokenProviderSoTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getAuthTokenProviderSoTimeout() {
    return authTokenProviderSoTimeout;
  }


  public void setAuthTokenProviderSoTimeout(ConfigNodePropertyInteger authTokenProviderSoTimeout) {
    this.authTokenProviderSoTimeout = authTokenProviderSoTimeout;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderClientId(ConfigNodePropertyString authTokenProviderClientId) {
    
    this.authTokenProviderClientId = authTokenProviderClientId;
    return this;
  }

   /**
   * Get authTokenProviderClientId
   * @return authTokenProviderClientId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenProviderClientId() {
    return authTokenProviderClientId;
  }


  public void setAuthTokenProviderClientId(ConfigNodePropertyString authTokenProviderClientId) {
    this.authTokenProviderClientId = authTokenProviderClientId;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderScope(ConfigNodePropertyString authTokenProviderScope) {
    
    this.authTokenProviderScope = authTokenProviderScope;
    return this;
  }

   /**
   * Get authTokenProviderScope
   * @return authTokenProviderScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenProviderScope() {
    return authTokenProviderScope;
  }


  public void setAuthTokenProviderScope(ConfigNodePropertyString authTokenProviderScope) {
    this.authTokenProviderScope = authTokenProviderScope;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderReuseAccessToken(ConfigNodePropertyBoolean authTokenProviderReuseAccessToken) {
    
    this.authTokenProviderReuseAccessToken = authTokenProviderReuseAccessToken;
    return this;
  }

   /**
   * Get authTokenProviderReuseAccessToken
   * @return authTokenProviderReuseAccessToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getAuthTokenProviderReuseAccessToken() {
    return authTokenProviderReuseAccessToken;
  }


  public void setAuthTokenProviderReuseAccessToken(ConfigNodePropertyBoolean authTokenProviderReuseAccessToken) {
    this.authTokenProviderReuseAccessToken = authTokenProviderReuseAccessToken;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenProviderRelaxedSsl(ConfigNodePropertyBoolean authTokenProviderRelaxedSsl) {
    
    this.authTokenProviderRelaxedSsl = authTokenProviderRelaxedSsl;
    return this;
  }

   /**
   * Get authTokenProviderRelaxedSsl
   * @return authTokenProviderRelaxedSsl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getAuthTokenProviderRelaxedSsl() {
    return authTokenProviderRelaxedSsl;
  }


  public void setAuthTokenProviderRelaxedSsl(ConfigNodePropertyBoolean authTokenProviderRelaxedSsl) {
    this.authTokenProviderRelaxedSsl = authTokenProviderRelaxedSsl;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties tokenRequestCustomizerType(ConfigNodePropertyString tokenRequestCustomizerType) {
    
    this.tokenRequestCustomizerType = tokenRequestCustomizerType;
    return this;
  }

   /**
   * Get tokenRequestCustomizerType
   * @return tokenRequestCustomizerType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getTokenRequestCustomizerType() {
    return tokenRequestCustomizerType;
  }


  public void setTokenRequestCustomizerType(ConfigNodePropertyString tokenRequestCustomizerType) {
    this.tokenRequestCustomizerType = tokenRequestCustomizerType;
  }


  public ComAdobeGraniteAuthOauthAccesstokenProviderProperties authTokenValidatorType(ConfigNodePropertyString authTokenValidatorType) {
    
    this.authTokenValidatorType = authTokenValidatorType;
    return this;
  }

   /**
   * Get authTokenValidatorType
   * @return authTokenValidatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getAuthTokenValidatorType() {
    return authTokenValidatorType;
  }


  public void setAuthTokenValidatorType(ConfigNodePropertyString authTokenValidatorType) {
    this.authTokenValidatorType = authTokenValidatorType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteAuthOauthAccesstokenProviderProperties comAdobeGraniteAuthOauthAccesstokenProviderProperties = (ComAdobeGraniteAuthOauthAccesstokenProviderProperties) o;
    return Objects.equals(this.name, comAdobeGraniteAuthOauthAccesstokenProviderProperties.name) &&
        Objects.equals(this.authTokenProviderTitle, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderTitle) &&
        Objects.equals(this.authTokenProviderDefaultClaims, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderDefaultClaims) &&
        Objects.equals(this.authTokenProviderEndpoint, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderEndpoint) &&
        Objects.equals(this.authAccessTokenRequest, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authAccessTokenRequest) &&
        Objects.equals(this.authTokenProviderKeypairAlias, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderKeypairAlias) &&
        Objects.equals(this.authTokenProviderConnTimeout, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderConnTimeout) &&
        Objects.equals(this.authTokenProviderSoTimeout, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderSoTimeout) &&
        Objects.equals(this.authTokenProviderClientId, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderClientId) &&
        Objects.equals(this.authTokenProviderScope, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderScope) &&
        Objects.equals(this.authTokenProviderReuseAccessToken, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderReuseAccessToken) &&
        Objects.equals(this.authTokenProviderRelaxedSsl, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenProviderRelaxedSsl) &&
        Objects.equals(this.tokenRequestCustomizerType, comAdobeGraniteAuthOauthAccesstokenProviderProperties.tokenRequestCustomizerType) &&
        Objects.equals(this.authTokenValidatorType, comAdobeGraniteAuthOauthAccesstokenProviderProperties.authTokenValidatorType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, authTokenProviderTitle, authTokenProviderDefaultClaims, authTokenProviderEndpoint, authAccessTokenRequest, authTokenProviderKeypairAlias, authTokenProviderConnTimeout, authTokenProviderSoTimeout, authTokenProviderClientId, authTokenProviderScope, authTokenProviderReuseAccessToken, authTokenProviderRelaxedSsl, tokenRequestCustomizerType, authTokenValidatorType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteAuthOauthAccesstokenProviderProperties {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    authTokenProviderTitle: ").append(toIndentedString(authTokenProviderTitle)).append("\n");
    sb.append("    authTokenProviderDefaultClaims: ").append(toIndentedString(authTokenProviderDefaultClaims)).append("\n");
    sb.append("    authTokenProviderEndpoint: ").append(toIndentedString(authTokenProviderEndpoint)).append("\n");
    sb.append("    authAccessTokenRequest: ").append(toIndentedString(authAccessTokenRequest)).append("\n");
    sb.append("    authTokenProviderKeypairAlias: ").append(toIndentedString(authTokenProviderKeypairAlias)).append("\n");
    sb.append("    authTokenProviderConnTimeout: ").append(toIndentedString(authTokenProviderConnTimeout)).append("\n");
    sb.append("    authTokenProviderSoTimeout: ").append(toIndentedString(authTokenProviderSoTimeout)).append("\n");
    sb.append("    authTokenProviderClientId: ").append(toIndentedString(authTokenProviderClientId)).append("\n");
    sb.append("    authTokenProviderScope: ").append(toIndentedString(authTokenProviderScope)).append("\n");
    sb.append("    authTokenProviderReuseAccessToken: ").append(toIndentedString(authTokenProviderReuseAccessToken)).append("\n");
    sb.append("    authTokenProviderRelaxedSsl: ").append(toIndentedString(authTokenProviderRelaxedSsl)).append("\n");
    sb.append("    tokenRequestCustomizerType: ").append(toIndentedString(tokenRequestCustomizerType)).append("\n");
    sb.append("    authTokenValidatorType: ").append(toIndentedString(authTokenValidatorType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

