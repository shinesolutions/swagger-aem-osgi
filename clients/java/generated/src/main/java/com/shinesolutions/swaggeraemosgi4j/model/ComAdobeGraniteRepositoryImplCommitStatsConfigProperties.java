/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ComAdobeGraniteRepositoryImplCommitStatsConfigProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class ComAdobeGraniteRepositoryImplCommitStatsConfigProperties {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private ConfigNodePropertyBoolean enabled;

  public static final String SERIALIZED_NAME_INTERVAL_SECONDS = "intervalSeconds";
  @SerializedName(SERIALIZED_NAME_INTERVAL_SECONDS)
  private ConfigNodePropertyInteger intervalSeconds;

  public static final String SERIALIZED_NAME_COMMITS_PER_INTERVAL_THRESHOLD = "commitsPerIntervalThreshold";
  @SerializedName(SERIALIZED_NAME_COMMITS_PER_INTERVAL_THRESHOLD)
  private ConfigNodePropertyInteger commitsPerIntervalThreshold;

  public static final String SERIALIZED_NAME_MAX_LOCATION_LENGTH = "maxLocationLength";
  @SerializedName(SERIALIZED_NAME_MAX_LOCATION_LENGTH)
  private ConfigNodePropertyInteger maxLocationLength;

  public static final String SERIALIZED_NAME_MAX_DETAILS_SHOWN = "maxDetailsShown";
  @SerializedName(SERIALIZED_NAME_MAX_DETAILS_SHOWN)
  private ConfigNodePropertyInteger maxDetailsShown;

  public static final String SERIALIZED_NAME_MIN_DETAILS_PERCENTAGE = "minDetailsPercentage";
  @SerializedName(SERIALIZED_NAME_MIN_DETAILS_PERCENTAGE)
  private ConfigNodePropertyInteger minDetailsPercentage;

  public static final String SERIALIZED_NAME_THREAD_MATCHERS = "threadMatchers";
  @SerializedName(SERIALIZED_NAME_THREAD_MATCHERS)
  private ConfigNodePropertyArray threadMatchers;

  public static final String SERIALIZED_NAME_MAX_GREEDY_DEPTH = "maxGreedyDepth";
  @SerializedName(SERIALIZED_NAME_MAX_GREEDY_DEPTH)
  private ConfigNodePropertyInteger maxGreedyDepth;

  public static final String SERIALIZED_NAME_GREEDY_STACK_MATCHERS = "greedyStackMatchers";
  @SerializedName(SERIALIZED_NAME_GREEDY_STACK_MATCHERS)
  private ConfigNodePropertyString greedyStackMatchers;

  public static final String SERIALIZED_NAME_STACK_FILTERS = "stackFilters";
  @SerializedName(SERIALIZED_NAME_STACK_FILTERS)
  private ConfigNodePropertyArray stackFilters;

  public static final String SERIALIZED_NAME_STACK_MATCHERS = "stackMatchers";
  @SerializedName(SERIALIZED_NAME_STACK_MATCHERS)
  private ConfigNodePropertyArray stackMatchers;

  public static final String SERIALIZED_NAME_STACK_CATEGORIZERS = "stackCategorizers";
  @SerializedName(SERIALIZED_NAME_STACK_CATEGORIZERS)
  private ConfigNodePropertyArray stackCategorizers;

  public static final String SERIALIZED_NAME_STACK_SHORTENERS = "stackShorteners";
  @SerializedName(SERIALIZED_NAME_STACK_SHORTENERS)
  private ConfigNodePropertyArray stackShorteners;


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties enabled(ConfigNodePropertyBoolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getEnabled() {
    return enabled;
  }


  public void setEnabled(ConfigNodePropertyBoolean enabled) {
    this.enabled = enabled;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties intervalSeconds(ConfigNodePropertyInteger intervalSeconds) {
    
    this.intervalSeconds = intervalSeconds;
    return this;
  }

   /**
   * Get intervalSeconds
   * @return intervalSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getIntervalSeconds() {
    return intervalSeconds;
  }


  public void setIntervalSeconds(ConfigNodePropertyInteger intervalSeconds) {
    this.intervalSeconds = intervalSeconds;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties commitsPerIntervalThreshold(ConfigNodePropertyInteger commitsPerIntervalThreshold) {
    
    this.commitsPerIntervalThreshold = commitsPerIntervalThreshold;
    return this;
  }

   /**
   * Get commitsPerIntervalThreshold
   * @return commitsPerIntervalThreshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getCommitsPerIntervalThreshold() {
    return commitsPerIntervalThreshold;
  }


  public void setCommitsPerIntervalThreshold(ConfigNodePropertyInteger commitsPerIntervalThreshold) {
    this.commitsPerIntervalThreshold = commitsPerIntervalThreshold;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties maxLocationLength(ConfigNodePropertyInteger maxLocationLength) {
    
    this.maxLocationLength = maxLocationLength;
    return this;
  }

   /**
   * Get maxLocationLength
   * @return maxLocationLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getMaxLocationLength() {
    return maxLocationLength;
  }


  public void setMaxLocationLength(ConfigNodePropertyInteger maxLocationLength) {
    this.maxLocationLength = maxLocationLength;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties maxDetailsShown(ConfigNodePropertyInteger maxDetailsShown) {
    
    this.maxDetailsShown = maxDetailsShown;
    return this;
  }

   /**
   * Get maxDetailsShown
   * @return maxDetailsShown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getMaxDetailsShown() {
    return maxDetailsShown;
  }


  public void setMaxDetailsShown(ConfigNodePropertyInteger maxDetailsShown) {
    this.maxDetailsShown = maxDetailsShown;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties minDetailsPercentage(ConfigNodePropertyInteger minDetailsPercentage) {
    
    this.minDetailsPercentage = minDetailsPercentage;
    return this;
  }

   /**
   * Get minDetailsPercentage
   * @return minDetailsPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getMinDetailsPercentage() {
    return minDetailsPercentage;
  }


  public void setMinDetailsPercentage(ConfigNodePropertyInteger minDetailsPercentage) {
    this.minDetailsPercentage = minDetailsPercentage;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties threadMatchers(ConfigNodePropertyArray threadMatchers) {
    
    this.threadMatchers = threadMatchers;
    return this;
  }

   /**
   * Get threadMatchers
   * @return threadMatchers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getThreadMatchers() {
    return threadMatchers;
  }


  public void setThreadMatchers(ConfigNodePropertyArray threadMatchers) {
    this.threadMatchers = threadMatchers;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties maxGreedyDepth(ConfigNodePropertyInteger maxGreedyDepth) {
    
    this.maxGreedyDepth = maxGreedyDepth;
    return this;
  }

   /**
   * Get maxGreedyDepth
   * @return maxGreedyDepth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getMaxGreedyDepth() {
    return maxGreedyDepth;
  }


  public void setMaxGreedyDepth(ConfigNodePropertyInteger maxGreedyDepth) {
    this.maxGreedyDepth = maxGreedyDepth;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties greedyStackMatchers(ConfigNodePropertyString greedyStackMatchers) {
    
    this.greedyStackMatchers = greedyStackMatchers;
    return this;
  }

   /**
   * Get greedyStackMatchers
   * @return greedyStackMatchers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getGreedyStackMatchers() {
    return greedyStackMatchers;
  }


  public void setGreedyStackMatchers(ConfigNodePropertyString greedyStackMatchers) {
    this.greedyStackMatchers = greedyStackMatchers;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties stackFilters(ConfigNodePropertyArray stackFilters) {
    
    this.stackFilters = stackFilters;
    return this;
  }

   /**
   * Get stackFilters
   * @return stackFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getStackFilters() {
    return stackFilters;
  }


  public void setStackFilters(ConfigNodePropertyArray stackFilters) {
    this.stackFilters = stackFilters;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties stackMatchers(ConfigNodePropertyArray stackMatchers) {
    
    this.stackMatchers = stackMatchers;
    return this;
  }

   /**
   * Get stackMatchers
   * @return stackMatchers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getStackMatchers() {
    return stackMatchers;
  }


  public void setStackMatchers(ConfigNodePropertyArray stackMatchers) {
    this.stackMatchers = stackMatchers;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties stackCategorizers(ConfigNodePropertyArray stackCategorizers) {
    
    this.stackCategorizers = stackCategorizers;
    return this;
  }

   /**
   * Get stackCategorizers
   * @return stackCategorizers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getStackCategorizers() {
    return stackCategorizers;
  }


  public void setStackCategorizers(ConfigNodePropertyArray stackCategorizers) {
    this.stackCategorizers = stackCategorizers;
  }


  public ComAdobeGraniteRepositoryImplCommitStatsConfigProperties stackShorteners(ConfigNodePropertyArray stackShorteners) {
    
    this.stackShorteners = stackShorteners;
    return this;
  }

   /**
   * Get stackShorteners
   * @return stackShorteners
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getStackShorteners() {
    return stackShorteners;
  }


  public void setStackShorteners(ConfigNodePropertyArray stackShorteners) {
    this.stackShorteners = stackShorteners;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeGraniteRepositoryImplCommitStatsConfigProperties comAdobeGraniteRepositoryImplCommitStatsConfigProperties = (ComAdobeGraniteRepositoryImplCommitStatsConfigProperties) o;
    return Objects.equals(this.enabled, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.enabled) &&
        Objects.equals(this.intervalSeconds, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.intervalSeconds) &&
        Objects.equals(this.commitsPerIntervalThreshold, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.commitsPerIntervalThreshold) &&
        Objects.equals(this.maxLocationLength, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxLocationLength) &&
        Objects.equals(this.maxDetailsShown, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxDetailsShown) &&
        Objects.equals(this.minDetailsPercentage, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.minDetailsPercentage) &&
        Objects.equals(this.threadMatchers, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.threadMatchers) &&
        Objects.equals(this.maxGreedyDepth, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.maxGreedyDepth) &&
        Objects.equals(this.greedyStackMatchers, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.greedyStackMatchers) &&
        Objects.equals(this.stackFilters, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackFilters) &&
        Objects.equals(this.stackMatchers, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackMatchers) &&
        Objects.equals(this.stackCategorizers, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackCategorizers) &&
        Objects.equals(this.stackShorteners, comAdobeGraniteRepositoryImplCommitStatsConfigProperties.stackShorteners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, intervalSeconds, commitsPerIntervalThreshold, maxLocationLength, maxDetailsShown, minDetailsPercentage, threadMatchers, maxGreedyDepth, greedyStackMatchers, stackFilters, stackMatchers, stackCategorizers, stackShorteners);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeGraniteRepositoryImplCommitStatsConfigProperties {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    intervalSeconds: ").append(toIndentedString(intervalSeconds)).append("\n");
    sb.append("    commitsPerIntervalThreshold: ").append(toIndentedString(commitsPerIntervalThreshold)).append("\n");
    sb.append("    maxLocationLength: ").append(toIndentedString(maxLocationLength)).append("\n");
    sb.append("    maxDetailsShown: ").append(toIndentedString(maxDetailsShown)).append("\n");
    sb.append("    minDetailsPercentage: ").append(toIndentedString(minDetailsPercentage)).append("\n");
    sb.append("    threadMatchers: ").append(toIndentedString(threadMatchers)).append("\n");
    sb.append("    maxGreedyDepth: ").append(toIndentedString(maxGreedyDepth)).append("\n");
    sb.append("    greedyStackMatchers: ").append(toIndentedString(greedyStackMatchers)).append("\n");
    sb.append("    stackFilters: ").append(toIndentedString(stackFilters)).append("\n");
    sb.append("    stackMatchers: ").append(toIndentedString(stackMatchers)).append("\n");
    sb.append("    stackCategorizers: ").append(toIndentedString(stackCategorizers)).append("\n");
    sb.append("    stackShorteners: ").append(toIndentedString(stackShorteners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

