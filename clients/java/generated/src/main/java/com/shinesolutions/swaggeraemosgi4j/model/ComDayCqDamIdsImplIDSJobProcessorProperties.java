/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ComDayCqDamIdsImplIDSJobProcessorProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class ComDayCqDamIdsImplIDSJobProcessorProperties {
  public static final String SERIALIZED_NAME_ENABLE_MULTISESSION = "enable.multisession";
  @SerializedName(SERIALIZED_NAME_ENABLE_MULTISESSION)
  private ConfigNodePropertyBoolean enableMultisession;

  public static final String SERIALIZED_NAME_IDS_CC_ENABLE = "ids.cc.enable";
  @SerializedName(SERIALIZED_NAME_IDS_CC_ENABLE)
  private ConfigNodePropertyBoolean idsCcEnable;

  public static final String SERIALIZED_NAME_ENABLE_RETRY = "enable.retry";
  @SerializedName(SERIALIZED_NAME_ENABLE_RETRY)
  private ConfigNodePropertyBoolean enableRetry;

  public static final String SERIALIZED_NAME_ENABLE_RETRY_SCRIPTERROR = "enable.retry.scripterror";
  @SerializedName(SERIALIZED_NAME_ENABLE_RETRY_SCRIPTERROR)
  private ConfigNodePropertyBoolean enableRetryScripterror;

  public static final String SERIALIZED_NAME_EXTERNALIZER_DOMAIN_CQHOST = "externalizer.domain.cqhost";
  @SerializedName(SERIALIZED_NAME_EXTERNALIZER_DOMAIN_CQHOST)
  private ConfigNodePropertyString externalizerDomainCqhost;

  public static final String SERIALIZED_NAME_EXTERNALIZER_DOMAIN_HTTP = "externalizer.domain.http";
  @SerializedName(SERIALIZED_NAME_EXTERNALIZER_DOMAIN_HTTP)
  private ConfigNodePropertyString externalizerDomainHttp;


  public ComDayCqDamIdsImplIDSJobProcessorProperties enableMultisession(ConfigNodePropertyBoolean enableMultisession) {
    
    this.enableMultisession = enableMultisession;
    return this;
  }

   /**
   * Get enableMultisession
   * @return enableMultisession
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getEnableMultisession() {
    return enableMultisession;
  }


  public void setEnableMultisession(ConfigNodePropertyBoolean enableMultisession) {
    this.enableMultisession = enableMultisession;
  }


  public ComDayCqDamIdsImplIDSJobProcessorProperties idsCcEnable(ConfigNodePropertyBoolean idsCcEnable) {
    
    this.idsCcEnable = idsCcEnable;
    return this;
  }

   /**
   * Get idsCcEnable
   * @return idsCcEnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getIdsCcEnable() {
    return idsCcEnable;
  }


  public void setIdsCcEnable(ConfigNodePropertyBoolean idsCcEnable) {
    this.idsCcEnable = idsCcEnable;
  }


  public ComDayCqDamIdsImplIDSJobProcessorProperties enableRetry(ConfigNodePropertyBoolean enableRetry) {
    
    this.enableRetry = enableRetry;
    return this;
  }

   /**
   * Get enableRetry
   * @return enableRetry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getEnableRetry() {
    return enableRetry;
  }


  public void setEnableRetry(ConfigNodePropertyBoolean enableRetry) {
    this.enableRetry = enableRetry;
  }


  public ComDayCqDamIdsImplIDSJobProcessorProperties enableRetryScripterror(ConfigNodePropertyBoolean enableRetryScripterror) {
    
    this.enableRetryScripterror = enableRetryScripterror;
    return this;
  }

   /**
   * Get enableRetryScripterror
   * @return enableRetryScripterror
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getEnableRetryScripterror() {
    return enableRetryScripterror;
  }


  public void setEnableRetryScripterror(ConfigNodePropertyBoolean enableRetryScripterror) {
    this.enableRetryScripterror = enableRetryScripterror;
  }


  public ComDayCqDamIdsImplIDSJobProcessorProperties externalizerDomainCqhost(ConfigNodePropertyString externalizerDomainCqhost) {
    
    this.externalizerDomainCqhost = externalizerDomainCqhost;
    return this;
  }

   /**
   * Get externalizerDomainCqhost
   * @return externalizerDomainCqhost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getExternalizerDomainCqhost() {
    return externalizerDomainCqhost;
  }


  public void setExternalizerDomainCqhost(ConfigNodePropertyString externalizerDomainCqhost) {
    this.externalizerDomainCqhost = externalizerDomainCqhost;
  }


  public ComDayCqDamIdsImplIDSJobProcessorProperties externalizerDomainHttp(ConfigNodePropertyString externalizerDomainHttp) {
    
    this.externalizerDomainHttp = externalizerDomainHttp;
    return this;
  }

   /**
   * Get externalizerDomainHttp
   * @return externalizerDomainHttp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getExternalizerDomainHttp() {
    return externalizerDomainHttp;
  }


  public void setExternalizerDomainHttp(ConfigNodePropertyString externalizerDomainHttp) {
    this.externalizerDomainHttp = externalizerDomainHttp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComDayCqDamIdsImplIDSJobProcessorProperties comDayCqDamIdsImplIDSJobProcessorProperties = (ComDayCqDamIdsImplIDSJobProcessorProperties) o;
    return Objects.equals(this.enableMultisession, comDayCqDamIdsImplIDSJobProcessorProperties.enableMultisession) &&
        Objects.equals(this.idsCcEnable, comDayCqDamIdsImplIDSJobProcessorProperties.idsCcEnable) &&
        Objects.equals(this.enableRetry, comDayCqDamIdsImplIDSJobProcessorProperties.enableRetry) &&
        Objects.equals(this.enableRetryScripterror, comDayCqDamIdsImplIDSJobProcessorProperties.enableRetryScripterror) &&
        Objects.equals(this.externalizerDomainCqhost, comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainCqhost) &&
        Objects.equals(this.externalizerDomainHttp, comDayCqDamIdsImplIDSJobProcessorProperties.externalizerDomainHttp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableMultisession, idsCcEnable, enableRetry, enableRetryScripterror, externalizerDomainCqhost, externalizerDomainHttp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComDayCqDamIdsImplIDSJobProcessorProperties {\n");
    sb.append("    enableMultisession: ").append(toIndentedString(enableMultisession)).append("\n");
    sb.append("    idsCcEnable: ").append(toIndentedString(idsCcEnable)).append("\n");
    sb.append("    enableRetry: ").append(toIndentedString(enableRetry)).append("\n");
    sb.append("    enableRetryScripterror: ").append(toIndentedString(enableRetryScripterror)).append("\n");
    sb.append("    externalizerDomainCqhost: ").append(toIndentedString(externalizerDomainCqhost)).append("\n");
    sb.append("    externalizerDomainHttp: ").append(toIndentedString(externalizerDomainHttp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

