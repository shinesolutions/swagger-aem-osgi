/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyDropDown;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyFloat;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyString;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * OrgApacheSlingEventJobsQueueConfigurationProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class OrgApacheSlingEventJobsQueueConfigurationProperties {
  public static final String SERIALIZED_NAME_QUEUE_NAME = "queue.name";
  @SerializedName(SERIALIZED_NAME_QUEUE_NAME)
  private ConfigNodePropertyString queueName;

  public static final String SERIALIZED_NAME_QUEUE_TOPICS = "queue.topics";
  @SerializedName(SERIALIZED_NAME_QUEUE_TOPICS)
  private ConfigNodePropertyArray queueTopics;

  public static final String SERIALIZED_NAME_QUEUE_TYPE = "queue.type";
  @SerializedName(SERIALIZED_NAME_QUEUE_TYPE)
  private ConfigNodePropertyDropDown queueType;

  public static final String SERIALIZED_NAME_QUEUE_PRIORITY = "queue.priority";
  @SerializedName(SERIALIZED_NAME_QUEUE_PRIORITY)
  private ConfigNodePropertyDropDown queuePriority;

  public static final String SERIALIZED_NAME_QUEUE_RETRIES = "queue.retries";
  @SerializedName(SERIALIZED_NAME_QUEUE_RETRIES)
  private ConfigNodePropertyInteger queueRetries;

  public static final String SERIALIZED_NAME_QUEUE_RETRYDELAY = "queue.retrydelay";
  @SerializedName(SERIALIZED_NAME_QUEUE_RETRYDELAY)
  private ConfigNodePropertyInteger queueRetrydelay;

  public static final String SERIALIZED_NAME_QUEUE_MAXPARALLEL = "queue.maxparallel";
  @SerializedName(SERIALIZED_NAME_QUEUE_MAXPARALLEL)
  private ConfigNodePropertyFloat queueMaxparallel;

  public static final String SERIALIZED_NAME_QUEUE_KEEP_JOBS = "queue.keepJobs";
  @SerializedName(SERIALIZED_NAME_QUEUE_KEEP_JOBS)
  private ConfigNodePropertyBoolean queueKeepJobs;

  public static final String SERIALIZED_NAME_QUEUE_PREFER_RUN_ON_CREATION_INSTANCE = "queue.preferRunOnCreationInstance";
  @SerializedName(SERIALIZED_NAME_QUEUE_PREFER_RUN_ON_CREATION_INSTANCE)
  private ConfigNodePropertyBoolean queuePreferRunOnCreationInstance;

  public static final String SERIALIZED_NAME_QUEUE_THREAD_POOL_SIZE = "queue.threadPoolSize";
  @SerializedName(SERIALIZED_NAME_QUEUE_THREAD_POOL_SIZE)
  private ConfigNodePropertyInteger queueThreadPoolSize;

  public static final String SERIALIZED_NAME_SERVICE_RANKING = "service.ranking";
  @SerializedName(SERIALIZED_NAME_SERVICE_RANKING)
  private ConfigNodePropertyInteger serviceRanking;


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueName(ConfigNodePropertyString queueName) {
    
    this.queueName = queueName;
    return this;
  }

   /**
   * Get queueName
   * @return queueName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyString getQueueName() {
    return queueName;
  }


  public void setQueueName(ConfigNodePropertyString queueName) {
    this.queueName = queueName;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueTopics(ConfigNodePropertyArray queueTopics) {
    
    this.queueTopics = queueTopics;
    return this;
  }

   /**
   * Get queueTopics
   * @return queueTopics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getQueueTopics() {
    return queueTopics;
  }


  public void setQueueTopics(ConfigNodePropertyArray queueTopics) {
    this.queueTopics = queueTopics;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueType(ConfigNodePropertyDropDown queueType) {
    
    this.queueType = queueType;
    return this;
  }

   /**
   * Get queueType
   * @return queueType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyDropDown getQueueType() {
    return queueType;
  }


  public void setQueueType(ConfigNodePropertyDropDown queueType) {
    this.queueType = queueType;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queuePriority(ConfigNodePropertyDropDown queuePriority) {
    
    this.queuePriority = queuePriority;
    return this;
  }

   /**
   * Get queuePriority
   * @return queuePriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyDropDown getQueuePriority() {
    return queuePriority;
  }


  public void setQueuePriority(ConfigNodePropertyDropDown queuePriority) {
    this.queuePriority = queuePriority;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueRetries(ConfigNodePropertyInteger queueRetries) {
    
    this.queueRetries = queueRetries;
    return this;
  }

   /**
   * Get queueRetries
   * @return queueRetries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getQueueRetries() {
    return queueRetries;
  }


  public void setQueueRetries(ConfigNodePropertyInteger queueRetries) {
    this.queueRetries = queueRetries;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueRetrydelay(ConfigNodePropertyInteger queueRetrydelay) {
    
    this.queueRetrydelay = queueRetrydelay;
    return this;
  }

   /**
   * Get queueRetrydelay
   * @return queueRetrydelay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getQueueRetrydelay() {
    return queueRetrydelay;
  }


  public void setQueueRetrydelay(ConfigNodePropertyInteger queueRetrydelay) {
    this.queueRetrydelay = queueRetrydelay;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueMaxparallel(ConfigNodePropertyFloat queueMaxparallel) {
    
    this.queueMaxparallel = queueMaxparallel;
    return this;
  }

   /**
   * Get queueMaxparallel
   * @return queueMaxparallel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyFloat getQueueMaxparallel() {
    return queueMaxparallel;
  }


  public void setQueueMaxparallel(ConfigNodePropertyFloat queueMaxparallel) {
    this.queueMaxparallel = queueMaxparallel;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueKeepJobs(ConfigNodePropertyBoolean queueKeepJobs) {
    
    this.queueKeepJobs = queueKeepJobs;
    return this;
  }

   /**
   * Get queueKeepJobs
   * @return queueKeepJobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getQueueKeepJobs() {
    return queueKeepJobs;
  }


  public void setQueueKeepJobs(ConfigNodePropertyBoolean queueKeepJobs) {
    this.queueKeepJobs = queueKeepJobs;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queuePreferRunOnCreationInstance(ConfigNodePropertyBoolean queuePreferRunOnCreationInstance) {
    
    this.queuePreferRunOnCreationInstance = queuePreferRunOnCreationInstance;
    return this;
  }

   /**
   * Get queuePreferRunOnCreationInstance
   * @return queuePreferRunOnCreationInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getQueuePreferRunOnCreationInstance() {
    return queuePreferRunOnCreationInstance;
  }


  public void setQueuePreferRunOnCreationInstance(ConfigNodePropertyBoolean queuePreferRunOnCreationInstance) {
    this.queuePreferRunOnCreationInstance = queuePreferRunOnCreationInstance;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties queueThreadPoolSize(ConfigNodePropertyInteger queueThreadPoolSize) {
    
    this.queueThreadPoolSize = queueThreadPoolSize;
    return this;
  }

   /**
   * Get queueThreadPoolSize
   * @return queueThreadPoolSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getQueueThreadPoolSize() {
    return queueThreadPoolSize;
  }


  public void setQueueThreadPoolSize(ConfigNodePropertyInteger queueThreadPoolSize) {
    this.queueThreadPoolSize = queueThreadPoolSize;
  }


  public OrgApacheSlingEventJobsQueueConfigurationProperties serviceRanking(ConfigNodePropertyInteger serviceRanking) {
    
    this.serviceRanking = serviceRanking;
    return this;
  }

   /**
   * Get serviceRanking
   * @return serviceRanking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getServiceRanking() {
    return serviceRanking;
  }


  public void setServiceRanking(ConfigNodePropertyInteger serviceRanking) {
    this.serviceRanking = serviceRanking;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgApacheSlingEventJobsQueueConfigurationProperties orgApacheSlingEventJobsQueueConfigurationProperties = (OrgApacheSlingEventJobsQueueConfigurationProperties) o;
    return Objects.equals(this.queueName, orgApacheSlingEventJobsQueueConfigurationProperties.queueName) &&
        Objects.equals(this.queueTopics, orgApacheSlingEventJobsQueueConfigurationProperties.queueTopics) &&
        Objects.equals(this.queueType, orgApacheSlingEventJobsQueueConfigurationProperties.queueType) &&
        Objects.equals(this.queuePriority, orgApacheSlingEventJobsQueueConfigurationProperties.queuePriority) &&
        Objects.equals(this.queueRetries, orgApacheSlingEventJobsQueueConfigurationProperties.queueRetries) &&
        Objects.equals(this.queueRetrydelay, orgApacheSlingEventJobsQueueConfigurationProperties.queueRetrydelay) &&
        Objects.equals(this.queueMaxparallel, orgApacheSlingEventJobsQueueConfigurationProperties.queueMaxparallel) &&
        Objects.equals(this.queueKeepJobs, orgApacheSlingEventJobsQueueConfigurationProperties.queueKeepJobs) &&
        Objects.equals(this.queuePreferRunOnCreationInstance, orgApacheSlingEventJobsQueueConfigurationProperties.queuePreferRunOnCreationInstance) &&
        Objects.equals(this.queueThreadPoolSize, orgApacheSlingEventJobsQueueConfigurationProperties.queueThreadPoolSize) &&
        Objects.equals(this.serviceRanking, orgApacheSlingEventJobsQueueConfigurationProperties.serviceRanking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(queueName, queueTopics, queueType, queuePriority, queueRetries, queueRetrydelay, queueMaxparallel, queueKeepJobs, queuePreferRunOnCreationInstance, queueThreadPoolSize, serviceRanking);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgApacheSlingEventJobsQueueConfigurationProperties {\n");
    sb.append("    queueName: ").append(toIndentedString(queueName)).append("\n");
    sb.append("    queueTopics: ").append(toIndentedString(queueTopics)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("    queuePriority: ").append(toIndentedString(queuePriority)).append("\n");
    sb.append("    queueRetries: ").append(toIndentedString(queueRetries)).append("\n");
    sb.append("    queueRetrydelay: ").append(toIndentedString(queueRetrydelay)).append("\n");
    sb.append("    queueMaxparallel: ").append(toIndentedString(queueMaxparallel)).append("\n");
    sb.append("    queueKeepJobs: ").append(toIndentedString(queueKeepJobs)).append("\n");
    sb.append("    queuePreferRunOnCreationInstance: ").append(toIndentedString(queuePreferRunOnCreationInstance)).append("\n");
    sb.append("    queueThreadPoolSize: ").append(toIndentedString(queueThreadPoolSize)).append("\n");
    sb.append("    serviceRanking: ").append(toIndentedString(serviceRanking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

