/*
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.shinesolutions.swaggeraemosgi4j.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyArray;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyBoolean;
import com.shinesolutions.swaggeraemosgi4j.model.ConfigNodePropertyInteger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-21T11:01:16.126+11:00[Australia/Melbourne]")
public class ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties {
  public static final String SERIALIZED_NAME_CACHE_ENABLE = "cache.enable";
  @SerializedName(SERIALIZED_NAME_CACHE_ENABLE)
  private ConfigNodePropertyBoolean cacheEnable;

  public static final String SERIALIZED_NAME_CACHE_ROOT_PATHS = "cache.rootPaths";
  @SerializedName(SERIALIZED_NAME_CACHE_ROOT_PATHS)
  private ConfigNodePropertyArray cacheRootPaths;

  public static final String SERIALIZED_NAME_CACHE_MAX_SIZE = "cache.maxSize";
  @SerializedName(SERIALIZED_NAME_CACHE_MAX_SIZE)
  private ConfigNodePropertyInteger cacheMaxSize;

  public static final String SERIALIZED_NAME_CACHE_MAX_ENTRIES = "cache.maxEntries";
  @SerializedName(SERIALIZED_NAME_CACHE_MAX_ENTRIES)
  private ConfigNodePropertyInteger cacheMaxEntries;


  public ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties cacheEnable(ConfigNodePropertyBoolean cacheEnable) {
    
    this.cacheEnable = cacheEnable;
    return this;
  }

   /**
   * Get cacheEnable
   * @return cacheEnable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyBoolean getCacheEnable() {
    return cacheEnable;
  }


  public void setCacheEnable(ConfigNodePropertyBoolean cacheEnable) {
    this.cacheEnable = cacheEnable;
  }


  public ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties cacheRootPaths(ConfigNodePropertyArray cacheRootPaths) {
    
    this.cacheRootPaths = cacheRootPaths;
    return this;
  }

   /**
   * Get cacheRootPaths
   * @return cacheRootPaths
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyArray getCacheRootPaths() {
    return cacheRootPaths;
  }


  public void setCacheRootPaths(ConfigNodePropertyArray cacheRootPaths) {
    this.cacheRootPaths = cacheRootPaths;
  }


  public ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties cacheMaxSize(ConfigNodePropertyInteger cacheMaxSize) {
    
    this.cacheMaxSize = cacheMaxSize;
    return this;
  }

   /**
   * Get cacheMaxSize
   * @return cacheMaxSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getCacheMaxSize() {
    return cacheMaxSize;
  }


  public void setCacheMaxSize(ConfigNodePropertyInteger cacheMaxSize) {
    this.cacheMaxSize = cacheMaxSize;
  }


  public ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties cacheMaxEntries(ConfigNodePropertyInteger cacheMaxEntries) {
    
    this.cacheMaxEntries = cacheMaxEntries;
    return this;
  }

   /**
   * Get cacheMaxEntries
   * @return cacheMaxEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigNodePropertyInteger getCacheMaxEntries() {
    return cacheMaxEntries;
  }


  public void setCacheMaxEntries(ConfigNodePropertyInteger cacheMaxEntries) {
    this.cacheMaxEntries = cacheMaxEntries;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties comAdobeCqDamS7imagingImplPsPlatformServerServletProperties = (ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties) o;
    return Objects.equals(this.cacheEnable, comAdobeCqDamS7imagingImplPsPlatformServerServletProperties.cacheEnable) &&
        Objects.equals(this.cacheRootPaths, comAdobeCqDamS7imagingImplPsPlatformServerServletProperties.cacheRootPaths) &&
        Objects.equals(this.cacheMaxSize, comAdobeCqDamS7imagingImplPsPlatformServerServletProperties.cacheMaxSize) &&
        Objects.equals(this.cacheMaxEntries, comAdobeCqDamS7imagingImplPsPlatformServerServletProperties.cacheMaxEntries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheEnable, cacheRootPaths, cacheMaxSize, cacheMaxEntries);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComAdobeCqDamS7imagingImplPsPlatformServerServletProperties {\n");
    sb.append("    cacheEnable: ").append(toIndentedString(cacheEnable)).append("\n");
    sb.append("    cacheRootPaths: ").append(toIndentedString(cacheRootPaths)).append("\n");
    sb.append("    cacheMaxSize: ").append(toIndentedString(cacheMaxSize)).append("\n");
    sb.append("    cacheMaxEntries: ").append(toIndentedString(cacheMaxEntries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

