=begin
#Adobe Experience Manager OSGI config (AEM) API

#Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API

The version of the OpenAPI document: 1.0.0-pre.0
Contact: opensource@shinesolutions.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.0

=end

require 'date'
require 'time'

module SwaggerAemOsgiClient
  class OrgApacheFelixHttpProperties
    attr_accessor :org_apache_felix_http_host

    attr_accessor :org_apache_felix_http_enable

    attr_accessor :org_osgi_service_http_port

    attr_accessor :org_apache_felix_http_timeout

    attr_accessor :org_apache_felix_https_enable

    attr_accessor :org_osgi_service_http_port_secure

    attr_accessor :org_apache_felix_https_keystore

    attr_accessor :org_apache_felix_https_keystore_password

    attr_accessor :org_apache_felix_https_keystore_key_password

    attr_accessor :org_apache_felix_https_truststore

    attr_accessor :org_apache_felix_https_truststore_password

    attr_accessor :org_apache_felix_https_clientcertificate

    attr_accessor :org_apache_felix_http_context_path

    attr_accessor :org_apache_felix_http_mbeans

    attr_accessor :org_apache_felix_http_session_timeout

    attr_accessor :org_apache_felix_http_jetty_threadpool_max

    attr_accessor :org_apache_felix_http_jetty_acceptors

    attr_accessor :org_apache_felix_http_jetty_selectors

    attr_accessor :org_apache_felix_http_jetty_header_buffer_size

    attr_accessor :org_apache_felix_http_jetty_request_buffer_size

    attr_accessor :org_apache_felix_http_jetty_response_buffer_size

    attr_accessor :org_apache_felix_http_jetty_max_form_size

    attr_accessor :org_apache_felix_http_path_exclusions

    attr_accessor :org_apache_felix_https_jetty_ciphersuites_excluded

    attr_accessor :org_apache_felix_https_jetty_ciphersuites_included

    attr_accessor :org_apache_felix_http_jetty_send_server_header

    attr_accessor :org_apache_felix_https_jetty_protocols_included

    attr_accessor :org_apache_felix_https_jetty_protocols_excluded

    attr_accessor :org_apache_felix_proxy_load_balancer_connection_enable

    attr_accessor :org_apache_felix_https_jetty_renegotiate_allowed

    attr_accessor :org_apache_felix_https_jetty_session_cookie_http_only

    attr_accessor :org_apache_felix_https_jetty_session_cookie_secure

    attr_accessor :org_eclipse_jetty_servlet_session_id_path_parameter_name

    attr_accessor :org_eclipse_jetty_servlet_checking_remote_session_id_encoding

    attr_accessor :org_eclipse_jetty_servlet_session_cookie

    attr_accessor :org_eclipse_jetty_servlet_session_domain

    attr_accessor :org_eclipse_jetty_servlet_session_path

    attr_accessor :org_eclipse_jetty_servlet_max_age

    attr_accessor :org_apache_felix_http_name

    attr_accessor :org_apache_felix_jetty_gziphandler_enable

    attr_accessor :org_apache_felix_jetty_gzip_min_gzip_size

    attr_accessor :org_apache_felix_jetty_gzip_compression_level

    attr_accessor :org_apache_felix_jetty_gzip_inflate_buffer_size

    attr_accessor :org_apache_felix_jetty_gzip_sync_flush

    attr_accessor :org_apache_felix_jetty_gzip_excluded_user_agents

    attr_accessor :org_apache_felix_jetty_gzip_included_methods

    attr_accessor :org_apache_felix_jetty_gzip_excluded_methods

    attr_accessor :org_apache_felix_jetty_gzip_included_paths

    attr_accessor :org_apache_felix_jetty_gzip_excluded_paths

    attr_accessor :org_apache_felix_jetty_gzip_included_mime_types

    attr_accessor :org_apache_felix_jetty_gzip_excluded_mime_types

    attr_accessor :org_apache_felix_http_session_invalidate

    attr_accessor :org_apache_felix_http_session_uniqueid

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'org_apache_felix_http_host' => :'org.apache.felix.http.host',
        :'org_apache_felix_http_enable' => :'org.apache.felix.http.enable',
        :'org_osgi_service_http_port' => :'org.osgi.service.http.port',
        :'org_apache_felix_http_timeout' => :'org.apache.felix.http.timeout',
        :'org_apache_felix_https_enable' => :'org.apache.felix.https.enable',
        :'org_osgi_service_http_port_secure' => :'org.osgi.service.http.port.secure',
        :'org_apache_felix_https_keystore' => :'org.apache.felix.https.keystore',
        :'org_apache_felix_https_keystore_password' => :'org.apache.felix.https.keystore.password',
        :'org_apache_felix_https_keystore_key_password' => :'org.apache.felix.https.keystore.key.password',
        :'org_apache_felix_https_truststore' => :'org.apache.felix.https.truststore',
        :'org_apache_felix_https_truststore_password' => :'org.apache.felix.https.truststore.password',
        :'org_apache_felix_https_clientcertificate' => :'org.apache.felix.https.clientcertificate',
        :'org_apache_felix_http_context_path' => :'org.apache.felix.http.context_path',
        :'org_apache_felix_http_mbeans' => :'org.apache.felix.http.mbeans',
        :'org_apache_felix_http_session_timeout' => :'org.apache.felix.http.session.timeout',
        :'org_apache_felix_http_jetty_threadpool_max' => :'org.apache.felix.http.jetty.threadpool.max',
        :'org_apache_felix_http_jetty_acceptors' => :'org.apache.felix.http.jetty.acceptors',
        :'org_apache_felix_http_jetty_selectors' => :'org.apache.felix.http.jetty.selectors',
        :'org_apache_felix_http_jetty_header_buffer_size' => :'org.apache.felix.http.jetty.headerBufferSize',
        :'org_apache_felix_http_jetty_request_buffer_size' => :'org.apache.felix.http.jetty.requestBufferSize',
        :'org_apache_felix_http_jetty_response_buffer_size' => :'org.apache.felix.http.jetty.responseBufferSize',
        :'org_apache_felix_http_jetty_max_form_size' => :'org.apache.felix.http.jetty.maxFormSize',
        :'org_apache_felix_http_path_exclusions' => :'org.apache.felix.http.path_exclusions',
        :'org_apache_felix_https_jetty_ciphersuites_excluded' => :'org.apache.felix.https.jetty.ciphersuites.excluded',
        :'org_apache_felix_https_jetty_ciphersuites_included' => :'org.apache.felix.https.jetty.ciphersuites.included',
        :'org_apache_felix_http_jetty_send_server_header' => :'org.apache.felix.http.jetty.sendServerHeader',
        :'org_apache_felix_https_jetty_protocols_included' => :'org.apache.felix.https.jetty.protocols.included',
        :'org_apache_felix_https_jetty_protocols_excluded' => :'org.apache.felix.https.jetty.protocols.excluded',
        :'org_apache_felix_proxy_load_balancer_connection_enable' => :'org.apache.felix.proxy.load.balancer.connection.enable',
        :'org_apache_felix_https_jetty_renegotiate_allowed' => :'org.apache.felix.https.jetty.renegotiateAllowed',
        :'org_apache_felix_https_jetty_session_cookie_http_only' => :'org.apache.felix.https.jetty.session.cookie.httpOnly',
        :'org_apache_felix_https_jetty_session_cookie_secure' => :'org.apache.felix.https.jetty.session.cookie.secure',
        :'org_eclipse_jetty_servlet_session_id_path_parameter_name' => :'org.eclipse.jetty.servlet.SessionIdPathParameterName',
        :'org_eclipse_jetty_servlet_checking_remote_session_id_encoding' => :'org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding',
        :'org_eclipse_jetty_servlet_session_cookie' => :'org.eclipse.jetty.servlet.SessionCookie',
        :'org_eclipse_jetty_servlet_session_domain' => :'org.eclipse.jetty.servlet.SessionDomain',
        :'org_eclipse_jetty_servlet_session_path' => :'org.eclipse.jetty.servlet.SessionPath',
        :'org_eclipse_jetty_servlet_max_age' => :'org.eclipse.jetty.servlet.MaxAge',
        :'org_apache_felix_http_name' => :'org.apache.felix.http.name',
        :'org_apache_felix_jetty_gziphandler_enable' => :'org.apache.felix.jetty.gziphandler.enable',
        :'org_apache_felix_jetty_gzip_min_gzip_size' => :'org.apache.felix.jetty.gzip.minGzipSize',
        :'org_apache_felix_jetty_gzip_compression_level' => :'org.apache.felix.jetty.gzip.compressionLevel',
        :'org_apache_felix_jetty_gzip_inflate_buffer_size' => :'org.apache.felix.jetty.gzip.inflateBufferSize',
        :'org_apache_felix_jetty_gzip_sync_flush' => :'org.apache.felix.jetty.gzip.syncFlush',
        :'org_apache_felix_jetty_gzip_excluded_user_agents' => :'org.apache.felix.jetty.gzip.excludedUserAgents',
        :'org_apache_felix_jetty_gzip_included_methods' => :'org.apache.felix.jetty.gzip.includedMethods',
        :'org_apache_felix_jetty_gzip_excluded_methods' => :'org.apache.felix.jetty.gzip.excludedMethods',
        :'org_apache_felix_jetty_gzip_included_paths' => :'org.apache.felix.jetty.gzip.includedPaths',
        :'org_apache_felix_jetty_gzip_excluded_paths' => :'org.apache.felix.jetty.gzip.excludedPaths',
        :'org_apache_felix_jetty_gzip_included_mime_types' => :'org.apache.felix.jetty.gzip.includedMimeTypes',
        :'org_apache_felix_jetty_gzip_excluded_mime_types' => :'org.apache.felix.jetty.gzip.excludedMimeTypes',
        :'org_apache_felix_http_session_invalidate' => :'org.apache.felix.http.session.invalidate',
        :'org_apache_felix_http_session_uniqueid' => :'org.apache.felix.http.session.uniqueid'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'org_apache_felix_http_host' => :'ConfigNodePropertyString',
        :'org_apache_felix_http_enable' => :'ConfigNodePropertyBoolean',
        :'org_osgi_service_http_port' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_timeout' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_https_enable' => :'ConfigNodePropertyBoolean',
        :'org_osgi_service_http_port_secure' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_https_keystore' => :'ConfigNodePropertyString',
        :'org_apache_felix_https_keystore_password' => :'ConfigNodePropertyString',
        :'org_apache_felix_https_keystore_key_password' => :'ConfigNodePropertyString',
        :'org_apache_felix_https_truststore' => :'ConfigNodePropertyString',
        :'org_apache_felix_https_truststore_password' => :'ConfigNodePropertyString',
        :'org_apache_felix_https_clientcertificate' => :'ConfigNodePropertyDropDown',
        :'org_apache_felix_http_context_path' => :'ConfigNodePropertyString',
        :'org_apache_felix_http_mbeans' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_http_session_timeout' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_threadpool_max' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_acceptors' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_selectors' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_header_buffer_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_request_buffer_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_response_buffer_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_jetty_max_form_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_path_exclusions' => :'ConfigNodePropertyArray',
        :'org_apache_felix_https_jetty_ciphersuites_excluded' => :'ConfigNodePropertyArray',
        :'org_apache_felix_https_jetty_ciphersuites_included' => :'ConfigNodePropertyArray',
        :'org_apache_felix_http_jetty_send_server_header' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_https_jetty_protocols_included' => :'ConfigNodePropertyArray',
        :'org_apache_felix_https_jetty_protocols_excluded' => :'ConfigNodePropertyArray',
        :'org_apache_felix_proxy_load_balancer_connection_enable' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_https_jetty_renegotiate_allowed' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_https_jetty_session_cookie_http_only' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_https_jetty_session_cookie_secure' => :'ConfigNodePropertyBoolean',
        :'org_eclipse_jetty_servlet_session_id_path_parameter_name' => :'ConfigNodePropertyString',
        :'org_eclipse_jetty_servlet_checking_remote_session_id_encoding' => :'ConfigNodePropertyBoolean',
        :'org_eclipse_jetty_servlet_session_cookie' => :'ConfigNodePropertyString',
        :'org_eclipse_jetty_servlet_session_domain' => :'ConfigNodePropertyString',
        :'org_eclipse_jetty_servlet_session_path' => :'ConfigNodePropertyString',
        :'org_eclipse_jetty_servlet_max_age' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_http_name' => :'ConfigNodePropertyString',
        :'org_apache_felix_jetty_gziphandler_enable' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_jetty_gzip_min_gzip_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_jetty_gzip_compression_level' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_jetty_gzip_inflate_buffer_size' => :'ConfigNodePropertyInteger',
        :'org_apache_felix_jetty_gzip_sync_flush' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_jetty_gzip_excluded_user_agents' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_included_methods' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_excluded_methods' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_included_paths' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_excluded_paths' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_included_mime_types' => :'ConfigNodePropertyArray',
        :'org_apache_felix_jetty_gzip_excluded_mime_types' => :'ConfigNodePropertyArray',
        :'org_apache_felix_http_session_invalidate' => :'ConfigNodePropertyBoolean',
        :'org_apache_felix_http_session_uniqueid' => :'ConfigNodePropertyBoolean'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `SwaggerAemOsgiClient::OrgApacheFelixHttpProperties` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `SwaggerAemOsgiClient::OrgApacheFelixHttpProperties`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'org_apache_felix_http_host')
        self.org_apache_felix_http_host = attributes[:'org_apache_felix_http_host']
      end

      if attributes.key?(:'org_apache_felix_http_enable')
        self.org_apache_felix_http_enable = attributes[:'org_apache_felix_http_enable']
      end

      if attributes.key?(:'org_osgi_service_http_port')
        self.org_osgi_service_http_port = attributes[:'org_osgi_service_http_port']
      end

      if attributes.key?(:'org_apache_felix_http_timeout')
        self.org_apache_felix_http_timeout = attributes[:'org_apache_felix_http_timeout']
      end

      if attributes.key?(:'org_apache_felix_https_enable')
        self.org_apache_felix_https_enable = attributes[:'org_apache_felix_https_enable']
      end

      if attributes.key?(:'org_osgi_service_http_port_secure')
        self.org_osgi_service_http_port_secure = attributes[:'org_osgi_service_http_port_secure']
      end

      if attributes.key?(:'org_apache_felix_https_keystore')
        self.org_apache_felix_https_keystore = attributes[:'org_apache_felix_https_keystore']
      end

      if attributes.key?(:'org_apache_felix_https_keystore_password')
        self.org_apache_felix_https_keystore_password = attributes[:'org_apache_felix_https_keystore_password']
      end

      if attributes.key?(:'org_apache_felix_https_keystore_key_password')
        self.org_apache_felix_https_keystore_key_password = attributes[:'org_apache_felix_https_keystore_key_password']
      end

      if attributes.key?(:'org_apache_felix_https_truststore')
        self.org_apache_felix_https_truststore = attributes[:'org_apache_felix_https_truststore']
      end

      if attributes.key?(:'org_apache_felix_https_truststore_password')
        self.org_apache_felix_https_truststore_password = attributes[:'org_apache_felix_https_truststore_password']
      end

      if attributes.key?(:'org_apache_felix_https_clientcertificate')
        self.org_apache_felix_https_clientcertificate = attributes[:'org_apache_felix_https_clientcertificate']
      end

      if attributes.key?(:'org_apache_felix_http_context_path')
        self.org_apache_felix_http_context_path = attributes[:'org_apache_felix_http_context_path']
      end

      if attributes.key?(:'org_apache_felix_http_mbeans')
        self.org_apache_felix_http_mbeans = attributes[:'org_apache_felix_http_mbeans']
      end

      if attributes.key?(:'org_apache_felix_http_session_timeout')
        self.org_apache_felix_http_session_timeout = attributes[:'org_apache_felix_http_session_timeout']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_threadpool_max')
        self.org_apache_felix_http_jetty_threadpool_max = attributes[:'org_apache_felix_http_jetty_threadpool_max']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_acceptors')
        self.org_apache_felix_http_jetty_acceptors = attributes[:'org_apache_felix_http_jetty_acceptors']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_selectors')
        self.org_apache_felix_http_jetty_selectors = attributes[:'org_apache_felix_http_jetty_selectors']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_header_buffer_size')
        self.org_apache_felix_http_jetty_header_buffer_size = attributes[:'org_apache_felix_http_jetty_header_buffer_size']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_request_buffer_size')
        self.org_apache_felix_http_jetty_request_buffer_size = attributes[:'org_apache_felix_http_jetty_request_buffer_size']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_response_buffer_size')
        self.org_apache_felix_http_jetty_response_buffer_size = attributes[:'org_apache_felix_http_jetty_response_buffer_size']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_max_form_size')
        self.org_apache_felix_http_jetty_max_form_size = attributes[:'org_apache_felix_http_jetty_max_form_size']
      end

      if attributes.key?(:'org_apache_felix_http_path_exclusions')
        self.org_apache_felix_http_path_exclusions = attributes[:'org_apache_felix_http_path_exclusions']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_ciphersuites_excluded')
        self.org_apache_felix_https_jetty_ciphersuites_excluded = attributes[:'org_apache_felix_https_jetty_ciphersuites_excluded']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_ciphersuites_included')
        self.org_apache_felix_https_jetty_ciphersuites_included = attributes[:'org_apache_felix_https_jetty_ciphersuites_included']
      end

      if attributes.key?(:'org_apache_felix_http_jetty_send_server_header')
        self.org_apache_felix_http_jetty_send_server_header = attributes[:'org_apache_felix_http_jetty_send_server_header']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_protocols_included')
        self.org_apache_felix_https_jetty_protocols_included = attributes[:'org_apache_felix_https_jetty_protocols_included']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_protocols_excluded')
        self.org_apache_felix_https_jetty_protocols_excluded = attributes[:'org_apache_felix_https_jetty_protocols_excluded']
      end

      if attributes.key?(:'org_apache_felix_proxy_load_balancer_connection_enable')
        self.org_apache_felix_proxy_load_balancer_connection_enable = attributes[:'org_apache_felix_proxy_load_balancer_connection_enable']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_renegotiate_allowed')
        self.org_apache_felix_https_jetty_renegotiate_allowed = attributes[:'org_apache_felix_https_jetty_renegotiate_allowed']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_session_cookie_http_only')
        self.org_apache_felix_https_jetty_session_cookie_http_only = attributes[:'org_apache_felix_https_jetty_session_cookie_http_only']
      end

      if attributes.key?(:'org_apache_felix_https_jetty_session_cookie_secure')
        self.org_apache_felix_https_jetty_session_cookie_secure = attributes[:'org_apache_felix_https_jetty_session_cookie_secure']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_session_id_path_parameter_name')
        self.org_eclipse_jetty_servlet_session_id_path_parameter_name = attributes[:'org_eclipse_jetty_servlet_session_id_path_parameter_name']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_checking_remote_session_id_encoding')
        self.org_eclipse_jetty_servlet_checking_remote_session_id_encoding = attributes[:'org_eclipse_jetty_servlet_checking_remote_session_id_encoding']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_session_cookie')
        self.org_eclipse_jetty_servlet_session_cookie = attributes[:'org_eclipse_jetty_servlet_session_cookie']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_session_domain')
        self.org_eclipse_jetty_servlet_session_domain = attributes[:'org_eclipse_jetty_servlet_session_domain']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_session_path')
        self.org_eclipse_jetty_servlet_session_path = attributes[:'org_eclipse_jetty_servlet_session_path']
      end

      if attributes.key?(:'org_eclipse_jetty_servlet_max_age')
        self.org_eclipse_jetty_servlet_max_age = attributes[:'org_eclipse_jetty_servlet_max_age']
      end

      if attributes.key?(:'org_apache_felix_http_name')
        self.org_apache_felix_http_name = attributes[:'org_apache_felix_http_name']
      end

      if attributes.key?(:'org_apache_felix_jetty_gziphandler_enable')
        self.org_apache_felix_jetty_gziphandler_enable = attributes[:'org_apache_felix_jetty_gziphandler_enable']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_min_gzip_size')
        self.org_apache_felix_jetty_gzip_min_gzip_size = attributes[:'org_apache_felix_jetty_gzip_min_gzip_size']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_compression_level')
        self.org_apache_felix_jetty_gzip_compression_level = attributes[:'org_apache_felix_jetty_gzip_compression_level']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_inflate_buffer_size')
        self.org_apache_felix_jetty_gzip_inflate_buffer_size = attributes[:'org_apache_felix_jetty_gzip_inflate_buffer_size']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_sync_flush')
        self.org_apache_felix_jetty_gzip_sync_flush = attributes[:'org_apache_felix_jetty_gzip_sync_flush']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_excluded_user_agents')
        self.org_apache_felix_jetty_gzip_excluded_user_agents = attributes[:'org_apache_felix_jetty_gzip_excluded_user_agents']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_included_methods')
        self.org_apache_felix_jetty_gzip_included_methods = attributes[:'org_apache_felix_jetty_gzip_included_methods']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_excluded_methods')
        self.org_apache_felix_jetty_gzip_excluded_methods = attributes[:'org_apache_felix_jetty_gzip_excluded_methods']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_included_paths')
        self.org_apache_felix_jetty_gzip_included_paths = attributes[:'org_apache_felix_jetty_gzip_included_paths']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_excluded_paths')
        self.org_apache_felix_jetty_gzip_excluded_paths = attributes[:'org_apache_felix_jetty_gzip_excluded_paths']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_included_mime_types')
        self.org_apache_felix_jetty_gzip_included_mime_types = attributes[:'org_apache_felix_jetty_gzip_included_mime_types']
      end

      if attributes.key?(:'org_apache_felix_jetty_gzip_excluded_mime_types')
        self.org_apache_felix_jetty_gzip_excluded_mime_types = attributes[:'org_apache_felix_jetty_gzip_excluded_mime_types']
      end

      if attributes.key?(:'org_apache_felix_http_session_invalidate')
        self.org_apache_felix_http_session_invalidate = attributes[:'org_apache_felix_http_session_invalidate']
      end

      if attributes.key?(:'org_apache_felix_http_session_uniqueid')
        self.org_apache_felix_http_session_uniqueid = attributes[:'org_apache_felix_http_session_uniqueid']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          org_apache_felix_http_host == o.org_apache_felix_http_host &&
          org_apache_felix_http_enable == o.org_apache_felix_http_enable &&
          org_osgi_service_http_port == o.org_osgi_service_http_port &&
          org_apache_felix_http_timeout == o.org_apache_felix_http_timeout &&
          org_apache_felix_https_enable == o.org_apache_felix_https_enable &&
          org_osgi_service_http_port_secure == o.org_osgi_service_http_port_secure &&
          org_apache_felix_https_keystore == o.org_apache_felix_https_keystore &&
          org_apache_felix_https_keystore_password == o.org_apache_felix_https_keystore_password &&
          org_apache_felix_https_keystore_key_password == o.org_apache_felix_https_keystore_key_password &&
          org_apache_felix_https_truststore == o.org_apache_felix_https_truststore &&
          org_apache_felix_https_truststore_password == o.org_apache_felix_https_truststore_password &&
          org_apache_felix_https_clientcertificate == o.org_apache_felix_https_clientcertificate &&
          org_apache_felix_http_context_path == o.org_apache_felix_http_context_path &&
          org_apache_felix_http_mbeans == o.org_apache_felix_http_mbeans &&
          org_apache_felix_http_session_timeout == o.org_apache_felix_http_session_timeout &&
          org_apache_felix_http_jetty_threadpool_max == o.org_apache_felix_http_jetty_threadpool_max &&
          org_apache_felix_http_jetty_acceptors == o.org_apache_felix_http_jetty_acceptors &&
          org_apache_felix_http_jetty_selectors == o.org_apache_felix_http_jetty_selectors &&
          org_apache_felix_http_jetty_header_buffer_size == o.org_apache_felix_http_jetty_header_buffer_size &&
          org_apache_felix_http_jetty_request_buffer_size == o.org_apache_felix_http_jetty_request_buffer_size &&
          org_apache_felix_http_jetty_response_buffer_size == o.org_apache_felix_http_jetty_response_buffer_size &&
          org_apache_felix_http_jetty_max_form_size == o.org_apache_felix_http_jetty_max_form_size &&
          org_apache_felix_http_path_exclusions == o.org_apache_felix_http_path_exclusions &&
          org_apache_felix_https_jetty_ciphersuites_excluded == o.org_apache_felix_https_jetty_ciphersuites_excluded &&
          org_apache_felix_https_jetty_ciphersuites_included == o.org_apache_felix_https_jetty_ciphersuites_included &&
          org_apache_felix_http_jetty_send_server_header == o.org_apache_felix_http_jetty_send_server_header &&
          org_apache_felix_https_jetty_protocols_included == o.org_apache_felix_https_jetty_protocols_included &&
          org_apache_felix_https_jetty_protocols_excluded == o.org_apache_felix_https_jetty_protocols_excluded &&
          org_apache_felix_proxy_load_balancer_connection_enable == o.org_apache_felix_proxy_load_balancer_connection_enable &&
          org_apache_felix_https_jetty_renegotiate_allowed == o.org_apache_felix_https_jetty_renegotiate_allowed &&
          org_apache_felix_https_jetty_session_cookie_http_only == o.org_apache_felix_https_jetty_session_cookie_http_only &&
          org_apache_felix_https_jetty_session_cookie_secure == o.org_apache_felix_https_jetty_session_cookie_secure &&
          org_eclipse_jetty_servlet_session_id_path_parameter_name == o.org_eclipse_jetty_servlet_session_id_path_parameter_name &&
          org_eclipse_jetty_servlet_checking_remote_session_id_encoding == o.org_eclipse_jetty_servlet_checking_remote_session_id_encoding &&
          org_eclipse_jetty_servlet_session_cookie == o.org_eclipse_jetty_servlet_session_cookie &&
          org_eclipse_jetty_servlet_session_domain == o.org_eclipse_jetty_servlet_session_domain &&
          org_eclipse_jetty_servlet_session_path == o.org_eclipse_jetty_servlet_session_path &&
          org_eclipse_jetty_servlet_max_age == o.org_eclipse_jetty_servlet_max_age &&
          org_apache_felix_http_name == o.org_apache_felix_http_name &&
          org_apache_felix_jetty_gziphandler_enable == o.org_apache_felix_jetty_gziphandler_enable &&
          org_apache_felix_jetty_gzip_min_gzip_size == o.org_apache_felix_jetty_gzip_min_gzip_size &&
          org_apache_felix_jetty_gzip_compression_level == o.org_apache_felix_jetty_gzip_compression_level &&
          org_apache_felix_jetty_gzip_inflate_buffer_size == o.org_apache_felix_jetty_gzip_inflate_buffer_size &&
          org_apache_felix_jetty_gzip_sync_flush == o.org_apache_felix_jetty_gzip_sync_flush &&
          org_apache_felix_jetty_gzip_excluded_user_agents == o.org_apache_felix_jetty_gzip_excluded_user_agents &&
          org_apache_felix_jetty_gzip_included_methods == o.org_apache_felix_jetty_gzip_included_methods &&
          org_apache_felix_jetty_gzip_excluded_methods == o.org_apache_felix_jetty_gzip_excluded_methods &&
          org_apache_felix_jetty_gzip_included_paths == o.org_apache_felix_jetty_gzip_included_paths &&
          org_apache_felix_jetty_gzip_excluded_paths == o.org_apache_felix_jetty_gzip_excluded_paths &&
          org_apache_felix_jetty_gzip_included_mime_types == o.org_apache_felix_jetty_gzip_included_mime_types &&
          org_apache_felix_jetty_gzip_excluded_mime_types == o.org_apache_felix_jetty_gzip_excluded_mime_types &&
          org_apache_felix_http_session_invalidate == o.org_apache_felix_http_session_invalidate &&
          org_apache_felix_http_session_uniqueid == o.org_apache_felix_http_session_uniqueid
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [org_apache_felix_http_host, org_apache_felix_http_enable, org_osgi_service_http_port, org_apache_felix_http_timeout, org_apache_felix_https_enable, org_osgi_service_http_port_secure, org_apache_felix_https_keystore, org_apache_felix_https_keystore_password, org_apache_felix_https_keystore_key_password, org_apache_felix_https_truststore, org_apache_felix_https_truststore_password, org_apache_felix_https_clientcertificate, org_apache_felix_http_context_path, org_apache_felix_http_mbeans, org_apache_felix_http_session_timeout, org_apache_felix_http_jetty_threadpool_max, org_apache_felix_http_jetty_acceptors, org_apache_felix_http_jetty_selectors, org_apache_felix_http_jetty_header_buffer_size, org_apache_felix_http_jetty_request_buffer_size, org_apache_felix_http_jetty_response_buffer_size, org_apache_felix_http_jetty_max_form_size, org_apache_felix_http_path_exclusions, org_apache_felix_https_jetty_ciphersuites_excluded, org_apache_felix_https_jetty_ciphersuites_included, org_apache_felix_http_jetty_send_server_header, org_apache_felix_https_jetty_protocols_included, org_apache_felix_https_jetty_protocols_excluded, org_apache_felix_proxy_load_balancer_connection_enable, org_apache_felix_https_jetty_renegotiate_allowed, org_apache_felix_https_jetty_session_cookie_http_only, org_apache_felix_https_jetty_session_cookie_secure, org_eclipse_jetty_servlet_session_id_path_parameter_name, org_eclipse_jetty_servlet_checking_remote_session_id_encoding, org_eclipse_jetty_servlet_session_cookie, org_eclipse_jetty_servlet_session_domain, org_eclipse_jetty_servlet_session_path, org_eclipse_jetty_servlet_max_age, org_apache_felix_http_name, org_apache_felix_jetty_gziphandler_enable, org_apache_felix_jetty_gzip_min_gzip_size, org_apache_felix_jetty_gzip_compression_level, org_apache_felix_jetty_gzip_inflate_buffer_size, org_apache_felix_jetty_gzip_sync_flush, org_apache_felix_jetty_gzip_excluded_user_agents, org_apache_felix_jetty_gzip_included_methods, org_apache_felix_jetty_gzip_excluded_methods, org_apache_felix_jetty_gzip_included_paths, org_apache_felix_jetty_gzip_excluded_paths, org_apache_felix_jetty_gzip_included_mime_types, org_apache_felix_jetty_gzip_excluded_mime_types, org_apache_felix_http_session_invalidate, org_apache_felix_http_session_uniqueid].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      new.build_from_hash(attributes)
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.openapi_types.each_pair do |key, type|
        if attributes[self.class.attribute_map[key]].nil? && self.class.openapi_nullable.include?(key)
          self.send("#{key}=", nil)
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map { |v| _deserialize($1, v) })
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = SwaggerAemOsgiClient.const_get(type)
        klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
