"""
    Adobe Experience Manager OSGI config (AEM) API

    Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API  # noqa: E501

    The version of the OpenAPI document: 1.0.0-pre.0
    Contact: opensource@shinesolutions.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

import nulltype  # noqa: F401

from swaggeraemosgi.model_utils import (  # noqa: F401
    ApiTypeError,
    ModelComposed,
    ModelNormal,
    ModelSimple,
    cached_property,
    change_keys_js_to_python,
    convert_js_args_to_python_args,
    date,
    datetime,
    file_type,
    none_type,
    validate_get_composed_info,
)

def lazy_import():
    from swaggeraemosgi.model.config_node_property_array import ConfigNodePropertyArray
    from swaggeraemosgi.model.config_node_property_boolean import ConfigNodePropertyBoolean
    from swaggeraemosgi.model.config_node_property_drop_down import ConfigNodePropertyDropDown
    from swaggeraemosgi.model.config_node_property_integer import ConfigNodePropertyInteger
    from swaggeraemosgi.model.config_node_property_string import ConfigNodePropertyString
    globals()['ConfigNodePropertyArray'] = ConfigNodePropertyArray
    globals()['ConfigNodePropertyBoolean'] = ConfigNodePropertyBoolean
    globals()['ConfigNodePropertyDropDown'] = ConfigNodePropertyDropDown
    globals()['ConfigNodePropertyInteger'] = ConfigNodePropertyInteger
    globals()['ConfigNodePropertyString'] = ConfigNodePropertyString


class OrgApacheFelixHttpProperties(ModelNormal):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Attributes:
      allowed_values (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          with a capitalized key describing the allowed value and an allowed
          value. These dicts store the allowed enum values.
      attribute_map (dict): The key is attribute name
          and the value is json key in definition.
      discriminator_value_class_map (dict): A dict to go from the discriminator
          variable value to the discriminator class name.
      validations (dict): The key is the tuple path to the attribute
          and the for var_name this is (var_name,). The value is a dict
          that stores validations for max_length, min_length, max_items,
          min_items, exclusive_maximum, inclusive_maximum, exclusive_minimum,
          inclusive_minimum, and regex.
      additional_properties_type (tuple): A tuple of classes accepted
          as additional properties values.
    """

    allowed_values = {
    }

    validations = {
    }

    additional_properties_type = None

    _nullable = False

    @cached_property
    def openapi_types():
        """
        This must be a method because a model may have properties that are
        of type self, this must run after the class is loaded

        Returns
            openapi_types (dict): The key is attribute name
                and the value is attribute type.
        """
        lazy_import()
        return {
            'org_apache_felix_http_host': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_http_enable': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_osgi_service_http_port': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_timeout': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_https_enable': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_osgi_service_http_port_secure': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_https_keystore': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_https_keystore_password': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_https_keystore_key_password': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_https_truststore': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_https_truststore_password': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_https_clientcertificate': (ConfigNodePropertyDropDown,),  # noqa: E501
            'org_apache_felix_http_context_path': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_http_mbeans': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_http_session_timeout': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_threadpool_max': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_acceptors': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_selectors': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_header_buffer_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_request_buffer_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_response_buffer_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_jetty_max_form_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_path_exclusions': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_https_jetty_ciphersuites_excluded': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_https_jetty_ciphersuites_included': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_http_jetty_send_server_header': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_https_jetty_protocols_included': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_https_jetty_protocols_excluded': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_proxy_load_balancer_connection_enable': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_https_jetty_renegotiate_allowed': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_https_jetty_session_cookie_http_only': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_https_jetty_session_cookie_secure': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_eclipse_jetty_servlet_session_id_path_parameter_name': (ConfigNodePropertyString,),  # noqa: E501
            'org_eclipse_jetty_servlet_checking_remote_session_id_encoding': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_eclipse_jetty_servlet_session_cookie': (ConfigNodePropertyString,),  # noqa: E501
            'org_eclipse_jetty_servlet_session_domain': (ConfigNodePropertyString,),  # noqa: E501
            'org_eclipse_jetty_servlet_session_path': (ConfigNodePropertyString,),  # noqa: E501
            'org_eclipse_jetty_servlet_max_age': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_http_name': (ConfigNodePropertyString,),  # noqa: E501
            'org_apache_felix_jetty_gziphandler_enable': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_jetty_gzip_min_gzip_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_jetty_gzip_compression_level': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_jetty_gzip_inflate_buffer_size': (ConfigNodePropertyInteger,),  # noqa: E501
            'org_apache_felix_jetty_gzip_sync_flush': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_jetty_gzip_excluded_user_agents': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_included_methods': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_excluded_methods': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_included_paths': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_excluded_paths': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_included_mime_types': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_jetty_gzip_excluded_mime_types': (ConfigNodePropertyArray,),  # noqa: E501
            'org_apache_felix_http_session_invalidate': (ConfigNodePropertyBoolean,),  # noqa: E501
            'org_apache_felix_http_session_uniqueid': (ConfigNodePropertyBoolean,),  # noqa: E501
        }

    @cached_property
    def discriminator():
        return None


    attribute_map = {
        'org_apache_felix_http_host': 'org.apache.felix.http.host',  # noqa: E501
        'org_apache_felix_http_enable': 'org.apache.felix.http.enable',  # noqa: E501
        'org_osgi_service_http_port': 'org.osgi.service.http.port',  # noqa: E501
        'org_apache_felix_http_timeout': 'org.apache.felix.http.timeout',  # noqa: E501
        'org_apache_felix_https_enable': 'org.apache.felix.https.enable',  # noqa: E501
        'org_osgi_service_http_port_secure': 'org.osgi.service.http.port.secure',  # noqa: E501
        'org_apache_felix_https_keystore': 'org.apache.felix.https.keystore',  # noqa: E501
        'org_apache_felix_https_keystore_password': 'org.apache.felix.https.keystore.password',  # noqa: E501
        'org_apache_felix_https_keystore_key_password': 'org.apache.felix.https.keystore.key.password',  # noqa: E501
        'org_apache_felix_https_truststore': 'org.apache.felix.https.truststore',  # noqa: E501
        'org_apache_felix_https_truststore_password': 'org.apache.felix.https.truststore.password',  # noqa: E501
        'org_apache_felix_https_clientcertificate': 'org.apache.felix.https.clientcertificate',  # noqa: E501
        'org_apache_felix_http_context_path': 'org.apache.felix.http.context_path',  # noqa: E501
        'org_apache_felix_http_mbeans': 'org.apache.felix.http.mbeans',  # noqa: E501
        'org_apache_felix_http_session_timeout': 'org.apache.felix.http.session.timeout',  # noqa: E501
        'org_apache_felix_http_jetty_threadpool_max': 'org.apache.felix.http.jetty.threadpool.max',  # noqa: E501
        'org_apache_felix_http_jetty_acceptors': 'org.apache.felix.http.jetty.acceptors',  # noqa: E501
        'org_apache_felix_http_jetty_selectors': 'org.apache.felix.http.jetty.selectors',  # noqa: E501
        'org_apache_felix_http_jetty_header_buffer_size': 'org.apache.felix.http.jetty.headerBufferSize',  # noqa: E501
        'org_apache_felix_http_jetty_request_buffer_size': 'org.apache.felix.http.jetty.requestBufferSize',  # noqa: E501
        'org_apache_felix_http_jetty_response_buffer_size': 'org.apache.felix.http.jetty.responseBufferSize',  # noqa: E501
        'org_apache_felix_http_jetty_max_form_size': 'org.apache.felix.http.jetty.maxFormSize',  # noqa: E501
        'org_apache_felix_http_path_exclusions': 'org.apache.felix.http.path_exclusions',  # noqa: E501
        'org_apache_felix_https_jetty_ciphersuites_excluded': 'org.apache.felix.https.jetty.ciphersuites.excluded',  # noqa: E501
        'org_apache_felix_https_jetty_ciphersuites_included': 'org.apache.felix.https.jetty.ciphersuites.included',  # noqa: E501
        'org_apache_felix_http_jetty_send_server_header': 'org.apache.felix.http.jetty.sendServerHeader',  # noqa: E501
        'org_apache_felix_https_jetty_protocols_included': 'org.apache.felix.https.jetty.protocols.included',  # noqa: E501
        'org_apache_felix_https_jetty_protocols_excluded': 'org.apache.felix.https.jetty.protocols.excluded',  # noqa: E501
        'org_apache_felix_proxy_load_balancer_connection_enable': 'org.apache.felix.proxy.load.balancer.connection.enable',  # noqa: E501
        'org_apache_felix_https_jetty_renegotiate_allowed': 'org.apache.felix.https.jetty.renegotiateAllowed',  # noqa: E501
        'org_apache_felix_https_jetty_session_cookie_http_only': 'org.apache.felix.https.jetty.session.cookie.httpOnly',  # noqa: E501
        'org_apache_felix_https_jetty_session_cookie_secure': 'org.apache.felix.https.jetty.session.cookie.secure',  # noqa: E501
        'org_eclipse_jetty_servlet_session_id_path_parameter_name': 'org.eclipse.jetty.servlet.SessionIdPathParameterName',  # noqa: E501
        'org_eclipse_jetty_servlet_checking_remote_session_id_encoding': 'org.eclipse.jetty.servlet.CheckingRemoteSessionIdEncoding',  # noqa: E501
        'org_eclipse_jetty_servlet_session_cookie': 'org.eclipse.jetty.servlet.SessionCookie',  # noqa: E501
        'org_eclipse_jetty_servlet_session_domain': 'org.eclipse.jetty.servlet.SessionDomain',  # noqa: E501
        'org_eclipse_jetty_servlet_session_path': 'org.eclipse.jetty.servlet.SessionPath',  # noqa: E501
        'org_eclipse_jetty_servlet_max_age': 'org.eclipse.jetty.servlet.MaxAge',  # noqa: E501
        'org_apache_felix_http_name': 'org.apache.felix.http.name',  # noqa: E501
        'org_apache_felix_jetty_gziphandler_enable': 'org.apache.felix.jetty.gziphandler.enable',  # noqa: E501
        'org_apache_felix_jetty_gzip_min_gzip_size': 'org.apache.felix.jetty.gzip.minGzipSize',  # noqa: E501
        'org_apache_felix_jetty_gzip_compression_level': 'org.apache.felix.jetty.gzip.compressionLevel',  # noqa: E501
        'org_apache_felix_jetty_gzip_inflate_buffer_size': 'org.apache.felix.jetty.gzip.inflateBufferSize',  # noqa: E501
        'org_apache_felix_jetty_gzip_sync_flush': 'org.apache.felix.jetty.gzip.syncFlush',  # noqa: E501
        'org_apache_felix_jetty_gzip_excluded_user_agents': 'org.apache.felix.jetty.gzip.excludedUserAgents',  # noqa: E501
        'org_apache_felix_jetty_gzip_included_methods': 'org.apache.felix.jetty.gzip.includedMethods',  # noqa: E501
        'org_apache_felix_jetty_gzip_excluded_methods': 'org.apache.felix.jetty.gzip.excludedMethods',  # noqa: E501
        'org_apache_felix_jetty_gzip_included_paths': 'org.apache.felix.jetty.gzip.includedPaths',  # noqa: E501
        'org_apache_felix_jetty_gzip_excluded_paths': 'org.apache.felix.jetty.gzip.excludedPaths',  # noqa: E501
        'org_apache_felix_jetty_gzip_included_mime_types': 'org.apache.felix.jetty.gzip.includedMimeTypes',  # noqa: E501
        'org_apache_felix_jetty_gzip_excluded_mime_types': 'org.apache.felix.jetty.gzip.excludedMimeTypes',  # noqa: E501
        'org_apache_felix_http_session_invalidate': 'org.apache.felix.http.session.invalidate',  # noqa: E501
        'org_apache_felix_http_session_uniqueid': 'org.apache.felix.http.session.uniqueid',  # noqa: E501
    }

    _composed_schemas = {}

    required_properties = set([
        '_data_store',
        '_check_type',
        '_spec_property_naming',
        '_path_to_item',
        '_configuration',
        '_visited_composed_classes',
    ])

    @convert_js_args_to_python_args
    def __init__(self, *args, **kwargs):  # noqa: E501
        """OrgApacheFelixHttpProperties - a model defined in OpenAPI

        Keyword Args:
            _check_type (bool): if True, values for parameters in openapi_types
                                will be type checked and a TypeError will be
                                raised if the wrong type is input.
                                Defaults to True
            _path_to_item (tuple/list): This is a list of keys or values to
                                drill down to the model in received_data
                                when deserializing a response
            _spec_property_naming (bool): True if the variable names in the input data
                                are serialized names, as specified in the OpenAPI document.
                                False if the variable names in the input data
                                are pythonic names, e.g. snake case (default)
            _configuration (Configuration): the instance to use when
                                deserializing a file_type parameter.
                                If passed, type conversion is attempted
                                If omitted no type conversion is done.
            _visited_composed_classes (tuple): This stores a tuple of
                                classes that we have traveled through so that
                                if we see that class again we will not use its
                                discriminator again.
                                When traveling through a discriminator, the
                                composed schema that is
                                is traveled through is added to this set.
                                For example if Animal has a discriminator
                                petType and we pass in "Dog", and the class Dog
                                allOf includes Animal, we move through Animal
                                once using the discriminator, and pick Dog.
                                Then in Dog, we will make an instance of the
                                Animal class but this time we won't travel
                                through its discriminator because we passed in
                                _visited_composed_classes = (Animal,)
            org_apache_felix_http_host (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_http_enable (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_osgi_service_http_port (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_timeout (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_https_enable (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_osgi_service_http_port_secure (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_https_keystore (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_https_keystore_password (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_https_keystore_key_password (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_https_truststore (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_https_truststore_password (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_https_clientcertificate (ConfigNodePropertyDropDown): [optional]  # noqa: E501
            org_apache_felix_http_context_path (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_http_mbeans (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_http_session_timeout (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_threadpool_max (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_acceptors (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_selectors (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_header_buffer_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_request_buffer_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_response_buffer_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_jetty_max_form_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_path_exclusions (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_https_jetty_ciphersuites_excluded (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_https_jetty_ciphersuites_included (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_http_jetty_send_server_header (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_https_jetty_protocols_included (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_https_jetty_protocols_excluded (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_proxy_load_balancer_connection_enable (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_https_jetty_renegotiate_allowed (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_https_jetty_session_cookie_http_only (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_https_jetty_session_cookie_secure (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_session_id_path_parameter_name (ConfigNodePropertyString): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_checking_remote_session_id_encoding (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_session_cookie (ConfigNodePropertyString): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_session_domain (ConfigNodePropertyString): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_session_path (ConfigNodePropertyString): [optional]  # noqa: E501
            org_eclipse_jetty_servlet_max_age (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_http_name (ConfigNodePropertyString): [optional]  # noqa: E501
            org_apache_felix_jetty_gziphandler_enable (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_min_gzip_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_compression_level (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_inflate_buffer_size (ConfigNodePropertyInteger): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_sync_flush (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_excluded_user_agents (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_included_methods (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_excluded_methods (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_included_paths (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_excluded_paths (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_included_mime_types (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_jetty_gzip_excluded_mime_types (ConfigNodePropertyArray): [optional]  # noqa: E501
            org_apache_felix_http_session_invalidate (ConfigNodePropertyBoolean): [optional]  # noqa: E501
            org_apache_felix_http_session_uniqueid (ConfigNodePropertyBoolean): [optional]  # noqa: E501
        """

        _check_type = kwargs.pop('_check_type', True)
        _spec_property_naming = kwargs.pop('_spec_property_naming', False)
        _path_to_item = kwargs.pop('_path_to_item', ())
        _configuration = kwargs.pop('_configuration', None)
        _visited_composed_classes = kwargs.pop('_visited_composed_classes', ())

        if args:
            raise ApiTypeError(
                "Invalid positional arguments=%s passed to %s. Remove those invalid positional arguments." % (
                    args,
                    self.__class__.__name__,
                ),
                path_to_item=_path_to_item,
                valid_classes=(self.__class__,),
            )

        self._data_store = {}
        self._check_type = _check_type
        self._spec_property_naming = _spec_property_naming
        self._path_to_item = _path_to_item
        self._configuration = _configuration
        self._visited_composed_classes = _visited_composed_classes + (self.__class__,)

        for var_name, var_value in kwargs.items():
            if var_name not in self.attribute_map and \
                        self._configuration is not None and \
                        self._configuration.discard_unknown_keys and \
                        self.additional_properties_type is None:
                # discard variable.
                continue
            setattr(self, var_name, var_value)
