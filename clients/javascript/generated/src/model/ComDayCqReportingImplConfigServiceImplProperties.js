/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The ComDayCqReportingImplConfigServiceImplProperties model module.
 * @module model/ComDayCqReportingImplConfigServiceImplProperties
 * @version 1.0.0
 */
class ComDayCqReportingImplConfigServiceImplProperties {
    /**
     * Constructs a new <code>ComDayCqReportingImplConfigServiceImplProperties</code>.
     * @alias module:model/ComDayCqReportingImplConfigServiceImplProperties
     */
    constructor() { 
        
        ComDayCqReportingImplConfigServiceImplProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ComDayCqReportingImplConfigServiceImplProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComDayCqReportingImplConfigServiceImplProperties} obj Optional instance to populate.
     * @return {module:model/ComDayCqReportingImplConfigServiceImplProperties} The populated <code>ComDayCqReportingImplConfigServiceImplProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComDayCqReportingImplConfigServiceImplProperties();

            if (data.hasOwnProperty('repconf.timezone')) {
                obj['repconf.timezone'] = ConfigNodePropertyString.constructFromObject(data['repconf.timezone']);
            }
            if (data.hasOwnProperty('repconf.locale')) {
                obj['repconf.locale'] = ConfigNodePropertyString.constructFromObject(data['repconf.locale']);
            }
            if (data.hasOwnProperty('repconf.snapshots')) {
                obj['repconf.snapshots'] = ConfigNodePropertyString.constructFromObject(data['repconf.snapshots']);
            }
            if (data.hasOwnProperty('repconf.repdir')) {
                obj['repconf.repdir'] = ConfigNodePropertyString.constructFromObject(data['repconf.repdir']);
            }
            if (data.hasOwnProperty('repconf.hourofday')) {
                obj['repconf.hourofday'] = ConfigNodePropertyInteger.constructFromObject(data['repconf.hourofday']);
            }
            if (data.hasOwnProperty('repconf.minofhour')) {
                obj['repconf.minofhour'] = ConfigNodePropertyInteger.constructFromObject(data['repconf.minofhour']);
            }
            if (data.hasOwnProperty('repconf.maxrows')) {
                obj['repconf.maxrows'] = ConfigNodePropertyInteger.constructFromObject(data['repconf.maxrows']);
            }
            if (data.hasOwnProperty('repconf.fakedata')) {
                obj['repconf.fakedata'] = ConfigNodePropertyBoolean.constructFromObject(data['repconf.fakedata']);
            }
            if (data.hasOwnProperty('repconf.snapshotuser')) {
                obj['repconf.snapshotuser'] = ConfigNodePropertyString.constructFromObject(data['repconf.snapshotuser']);
            }
            if (data.hasOwnProperty('repconf.enforcesnapshotuser')) {
                obj['repconf.enforcesnapshotuser'] = ConfigNodePropertyBoolean.constructFromObject(data['repconf.enforcesnapshotuser']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyString} repconf.timezone
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.timezone'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} repconf.locale
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.locale'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} repconf.snapshots
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.snapshots'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} repconf.repdir
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.repdir'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} repconf.hourofday
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.hourofday'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} repconf.minofhour
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.minofhour'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} repconf.maxrows
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.maxrows'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} repconf.fakedata
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.fakedata'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} repconf.snapshotuser
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.snapshotuser'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} repconf.enforcesnapshotuser
 */
ComDayCqReportingImplConfigServiceImplProperties.prototype['repconf.enforcesnapshotuser'] = undefined;






export default ComDayCqReportingImplConfigServiceImplProperties;

