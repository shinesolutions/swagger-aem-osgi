/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyArray from './ConfigNodePropertyArray';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyDropDown from './ConfigNodePropertyDropDown';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The OrgApacheSlingDatasourceDataSourceFactoryProperties model module.
 * @module model/OrgApacheSlingDatasourceDataSourceFactoryProperties
 * @version 1.0.0
 */
class OrgApacheSlingDatasourceDataSourceFactoryProperties {
    /**
     * Constructs a new <code>OrgApacheSlingDatasourceDataSourceFactoryProperties</code>.
     * @alias module:model/OrgApacheSlingDatasourceDataSourceFactoryProperties
     */
    constructor() { 
        
        OrgApacheSlingDatasourceDataSourceFactoryProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgApacheSlingDatasourceDataSourceFactoryProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgApacheSlingDatasourceDataSourceFactoryProperties} obj Optional instance to populate.
     * @return {module:model/OrgApacheSlingDatasourceDataSourceFactoryProperties} The populated <code>OrgApacheSlingDatasourceDataSourceFactoryProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgApacheSlingDatasourceDataSourceFactoryProperties();

            if (data.hasOwnProperty('datasource.name')) {
                obj['datasource.name'] = ConfigNodePropertyString.constructFromObject(data['datasource.name']);
            }
            if (data.hasOwnProperty('datasource.svc.prop.name')) {
                obj['datasource.svc.prop.name'] = ConfigNodePropertyString.constructFromObject(data['datasource.svc.prop.name']);
            }
            if (data.hasOwnProperty('driverClassName')) {
                obj['driverClassName'] = ConfigNodePropertyString.constructFromObject(data['driverClassName']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ConfigNodePropertyString.constructFromObject(data['url']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ConfigNodePropertyString.constructFromObject(data['username']);
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ConfigNodePropertyString.constructFromObject(data['password']);
            }
            if (data.hasOwnProperty('defaultAutoCommit')) {
                obj['defaultAutoCommit'] = ConfigNodePropertyDropDown.constructFromObject(data['defaultAutoCommit']);
            }
            if (data.hasOwnProperty('defaultReadOnly')) {
                obj['defaultReadOnly'] = ConfigNodePropertyDropDown.constructFromObject(data['defaultReadOnly']);
            }
            if (data.hasOwnProperty('defaultTransactionIsolation')) {
                obj['defaultTransactionIsolation'] = ConfigNodePropertyDropDown.constructFromObject(data['defaultTransactionIsolation']);
            }
            if (data.hasOwnProperty('defaultCatalog')) {
                obj['defaultCatalog'] = ConfigNodePropertyString.constructFromObject(data['defaultCatalog']);
            }
            if (data.hasOwnProperty('maxActive')) {
                obj['maxActive'] = ConfigNodePropertyInteger.constructFromObject(data['maxActive']);
            }
            if (data.hasOwnProperty('maxIdle')) {
                obj['maxIdle'] = ConfigNodePropertyInteger.constructFromObject(data['maxIdle']);
            }
            if (data.hasOwnProperty('minIdle')) {
                obj['minIdle'] = ConfigNodePropertyInteger.constructFromObject(data['minIdle']);
            }
            if (data.hasOwnProperty('initialSize')) {
                obj['initialSize'] = ConfigNodePropertyInteger.constructFromObject(data['initialSize']);
            }
            if (data.hasOwnProperty('maxWait')) {
                obj['maxWait'] = ConfigNodePropertyInteger.constructFromObject(data['maxWait']);
            }
            if (data.hasOwnProperty('maxAge')) {
                obj['maxAge'] = ConfigNodePropertyInteger.constructFromObject(data['maxAge']);
            }
            if (data.hasOwnProperty('testOnBorrow')) {
                obj['testOnBorrow'] = ConfigNodePropertyBoolean.constructFromObject(data['testOnBorrow']);
            }
            if (data.hasOwnProperty('testOnReturn')) {
                obj['testOnReturn'] = ConfigNodePropertyBoolean.constructFromObject(data['testOnReturn']);
            }
            if (data.hasOwnProperty('testWhileIdle')) {
                obj['testWhileIdle'] = ConfigNodePropertyBoolean.constructFromObject(data['testWhileIdle']);
            }
            if (data.hasOwnProperty('validationQuery')) {
                obj['validationQuery'] = ConfigNodePropertyString.constructFromObject(data['validationQuery']);
            }
            if (data.hasOwnProperty('validationQueryTimeout')) {
                obj['validationQueryTimeout'] = ConfigNodePropertyInteger.constructFromObject(data['validationQueryTimeout']);
            }
            if (data.hasOwnProperty('timeBetweenEvictionRunsMillis')) {
                obj['timeBetweenEvictionRunsMillis'] = ConfigNodePropertyInteger.constructFromObject(data['timeBetweenEvictionRunsMillis']);
            }
            if (data.hasOwnProperty('minEvictableIdleTimeMillis')) {
                obj['minEvictableIdleTimeMillis'] = ConfigNodePropertyInteger.constructFromObject(data['minEvictableIdleTimeMillis']);
            }
            if (data.hasOwnProperty('connectionProperties')) {
                obj['connectionProperties'] = ConfigNodePropertyString.constructFromObject(data['connectionProperties']);
            }
            if (data.hasOwnProperty('initSQL')) {
                obj['initSQL'] = ConfigNodePropertyString.constructFromObject(data['initSQL']);
            }
            if (data.hasOwnProperty('jdbcInterceptors')) {
                obj['jdbcInterceptors'] = ConfigNodePropertyString.constructFromObject(data['jdbcInterceptors']);
            }
            if (data.hasOwnProperty('validationInterval')) {
                obj['validationInterval'] = ConfigNodePropertyInteger.constructFromObject(data['validationInterval']);
            }
            if (data.hasOwnProperty('logValidationErrors')) {
                obj['logValidationErrors'] = ConfigNodePropertyBoolean.constructFromObject(data['logValidationErrors']);
            }
            if (data.hasOwnProperty('datasource.svc.properties')) {
                obj['datasource.svc.properties'] = ConfigNodePropertyArray.constructFromObject(data['datasource.svc.properties']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyString} datasource.name
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['datasource.name'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} datasource.svc.prop.name
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['datasource.svc.prop.name'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} driverClassName
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['driverClassName'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} url
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['url'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} username
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['username'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} password
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['password'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyDropDown} defaultAutoCommit
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['defaultAutoCommit'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyDropDown} defaultReadOnly
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['defaultReadOnly'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyDropDown} defaultTransactionIsolation
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['defaultTransactionIsolation'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} defaultCatalog
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['defaultCatalog'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxActive
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['maxActive'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxIdle
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['maxIdle'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} minIdle
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['minIdle'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} initialSize
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['initialSize'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxWait
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['maxWait'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxAge
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['maxAge'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} testOnBorrow
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['testOnBorrow'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} testOnReturn
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['testOnReturn'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} testWhileIdle
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['testWhileIdle'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} validationQuery
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['validationQuery'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} validationQueryTimeout
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['validationQueryTimeout'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} timeBetweenEvictionRunsMillis
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['timeBetweenEvictionRunsMillis'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} minEvictableIdleTimeMillis
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['minEvictableIdleTimeMillis'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} connectionProperties
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['connectionProperties'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} initSQL
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['initSQL'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} jdbcInterceptors
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['jdbcInterceptors'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} validationInterval
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['validationInterval'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} logValidationErrors
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['logValidationErrors'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} datasource.svc.properties
 */
OrgApacheSlingDatasourceDataSourceFactoryProperties.prototype['datasource.svc.properties'] = undefined;






export default OrgApacheSlingDatasourceDataSourceFactoryProperties;

