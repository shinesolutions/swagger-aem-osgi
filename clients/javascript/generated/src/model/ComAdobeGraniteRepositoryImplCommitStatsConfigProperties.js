/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyArray from './ConfigNodePropertyArray';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The ComAdobeGraniteRepositoryImplCommitStatsConfigProperties model module.
 * @module model/ComAdobeGraniteRepositoryImplCommitStatsConfigProperties
 * @version 1.0.0
 */
class ComAdobeGraniteRepositoryImplCommitStatsConfigProperties {
    /**
     * Constructs a new <code>ComAdobeGraniteRepositoryImplCommitStatsConfigProperties</code>.
     * @alias module:model/ComAdobeGraniteRepositoryImplCommitStatsConfigProperties
     */
    constructor() { 
        
        ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ComAdobeGraniteRepositoryImplCommitStatsConfigProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComAdobeGraniteRepositoryImplCommitStatsConfigProperties} obj Optional instance to populate.
     * @return {module:model/ComAdobeGraniteRepositoryImplCommitStatsConfigProperties} The populated <code>ComAdobeGraniteRepositoryImplCommitStatsConfigProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComAdobeGraniteRepositoryImplCommitStatsConfigProperties();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ConfigNodePropertyBoolean.constructFromObject(data['enabled']);
            }
            if (data.hasOwnProperty('intervalSeconds')) {
                obj['intervalSeconds'] = ConfigNodePropertyInteger.constructFromObject(data['intervalSeconds']);
            }
            if (data.hasOwnProperty('commitsPerIntervalThreshold')) {
                obj['commitsPerIntervalThreshold'] = ConfigNodePropertyInteger.constructFromObject(data['commitsPerIntervalThreshold']);
            }
            if (data.hasOwnProperty('maxLocationLength')) {
                obj['maxLocationLength'] = ConfigNodePropertyInteger.constructFromObject(data['maxLocationLength']);
            }
            if (data.hasOwnProperty('maxDetailsShown')) {
                obj['maxDetailsShown'] = ConfigNodePropertyInteger.constructFromObject(data['maxDetailsShown']);
            }
            if (data.hasOwnProperty('minDetailsPercentage')) {
                obj['minDetailsPercentage'] = ConfigNodePropertyInteger.constructFromObject(data['minDetailsPercentage']);
            }
            if (data.hasOwnProperty('threadMatchers')) {
                obj['threadMatchers'] = ConfigNodePropertyArray.constructFromObject(data['threadMatchers']);
            }
            if (data.hasOwnProperty('maxGreedyDepth')) {
                obj['maxGreedyDepth'] = ConfigNodePropertyInteger.constructFromObject(data['maxGreedyDepth']);
            }
            if (data.hasOwnProperty('greedyStackMatchers')) {
                obj['greedyStackMatchers'] = ConfigNodePropertyString.constructFromObject(data['greedyStackMatchers']);
            }
            if (data.hasOwnProperty('stackFilters')) {
                obj['stackFilters'] = ConfigNodePropertyArray.constructFromObject(data['stackFilters']);
            }
            if (data.hasOwnProperty('stackMatchers')) {
                obj['stackMatchers'] = ConfigNodePropertyArray.constructFromObject(data['stackMatchers']);
            }
            if (data.hasOwnProperty('stackCategorizers')) {
                obj['stackCategorizers'] = ConfigNodePropertyArray.constructFromObject(data['stackCategorizers']);
            }
            if (data.hasOwnProperty('stackShorteners')) {
                obj['stackShorteners'] = ConfigNodePropertyArray.constructFromObject(data['stackShorteners']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyBoolean} enabled
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['enabled'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} intervalSeconds
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['intervalSeconds'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} commitsPerIntervalThreshold
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['commitsPerIntervalThreshold'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxLocationLength
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['maxLocationLength'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxDetailsShown
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['maxDetailsShown'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} minDetailsPercentage
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['minDetailsPercentage'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} threadMatchers
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['threadMatchers'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} maxGreedyDepth
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['maxGreedyDepth'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} greedyStackMatchers
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['greedyStackMatchers'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} stackFilters
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['stackFilters'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} stackMatchers
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['stackMatchers'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} stackCategorizers
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['stackCategorizers'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} stackShorteners
 */
ComAdobeGraniteRepositoryImplCommitStatsConfigProperties.prototype['stackShorteners'] = undefined;






export default ComAdobeGraniteRepositoryImplCommitStatsConfigProperties;

