/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties model module.
 * @module model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties
 * @version 1.0.0
 */
class OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties {
    /**
     * Constructs a new <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code>.
     * @alias module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties
     */
    constructor() { 
        
        OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties} obj Optional instance to populate.
     * @return {module:model/OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties} The populated <code>OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties();

            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ConfigNodePropertyBoolean.constructFromObject(data['disabled']);
            }
            if (data.hasOwnProperty('debug')) {
                obj['debug'] = ConfigNodePropertyBoolean.constructFromObject(data['debug']);
            }
            if (data.hasOwnProperty('localIndexDir')) {
                obj['localIndexDir'] = ConfigNodePropertyString.constructFromObject(data['localIndexDir']);
            }
            if (data.hasOwnProperty('enableOpenIndexAsync')) {
                obj['enableOpenIndexAsync'] = ConfigNodePropertyBoolean.constructFromObject(data['enableOpenIndexAsync']);
            }
            if (data.hasOwnProperty('threadPoolSize')) {
                obj['threadPoolSize'] = ConfigNodePropertyInteger.constructFromObject(data['threadPoolSize']);
            }
            if (data.hasOwnProperty('prefetchIndexFiles')) {
                obj['prefetchIndexFiles'] = ConfigNodePropertyBoolean.constructFromObject(data['prefetchIndexFiles']);
            }
            if (data.hasOwnProperty('extractedTextCacheSizeInMB')) {
                obj['extractedTextCacheSizeInMB'] = ConfigNodePropertyInteger.constructFromObject(data['extractedTextCacheSizeInMB']);
            }
            if (data.hasOwnProperty('extractedTextCacheExpiryInSecs')) {
                obj['extractedTextCacheExpiryInSecs'] = ConfigNodePropertyInteger.constructFromObject(data['extractedTextCacheExpiryInSecs']);
            }
            if (data.hasOwnProperty('alwaysUsePreExtractedCache')) {
                obj['alwaysUsePreExtractedCache'] = ConfigNodePropertyBoolean.constructFromObject(data['alwaysUsePreExtractedCache']);
            }
            if (data.hasOwnProperty('booleanClauseLimit')) {
                obj['booleanClauseLimit'] = ConfigNodePropertyInteger.constructFromObject(data['booleanClauseLimit']);
            }
            if (data.hasOwnProperty('enableHybridIndexing')) {
                obj['enableHybridIndexing'] = ConfigNodePropertyBoolean.constructFromObject(data['enableHybridIndexing']);
            }
            if (data.hasOwnProperty('hybridQueueSize')) {
                obj['hybridQueueSize'] = ConfigNodePropertyInteger.constructFromObject(data['hybridQueueSize']);
            }
            if (data.hasOwnProperty('disableStoredIndexDefinition')) {
                obj['disableStoredIndexDefinition'] = ConfigNodePropertyBoolean.constructFromObject(data['disableStoredIndexDefinition']);
            }
            if (data.hasOwnProperty('deletedBlobsCollectionEnabled')) {
                obj['deletedBlobsCollectionEnabled'] = ConfigNodePropertyBoolean.constructFromObject(data['deletedBlobsCollectionEnabled']);
            }
            if (data.hasOwnProperty('propIndexCleanerIntervalInSecs')) {
                obj['propIndexCleanerIntervalInSecs'] = ConfigNodePropertyInteger.constructFromObject(data['propIndexCleanerIntervalInSecs']);
            }
            if (data.hasOwnProperty('enableSingleBlobIndexFiles')) {
                obj['enableSingleBlobIndexFiles'] = ConfigNodePropertyBoolean.constructFromObject(data['enableSingleBlobIndexFiles']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyBoolean} disabled
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['disabled'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} debug
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['debug'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} localIndexDir
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['localIndexDir'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} enableOpenIndexAsync
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['enableOpenIndexAsync'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} threadPoolSize
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['threadPoolSize'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} prefetchIndexFiles
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['prefetchIndexFiles'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} extractedTextCacheSizeInMB
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['extractedTextCacheSizeInMB'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} extractedTextCacheExpiryInSecs
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['extractedTextCacheExpiryInSecs'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} alwaysUsePreExtractedCache
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['alwaysUsePreExtractedCache'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} booleanClauseLimit
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['booleanClauseLimit'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} enableHybridIndexing
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['enableHybridIndexing'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} hybridQueueSize
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['hybridQueueSize'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} disableStoredIndexDefinition
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['disableStoredIndexDefinition'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} deletedBlobsCollectionEnabled
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['deletedBlobsCollectionEnabled'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} propIndexCleanerIntervalInSecs
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['propIndexCleanerIntervalInSecs'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} enableSingleBlobIndexFiles
 */
OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties.prototype['enableSingleBlobIndexFiles'] = undefined;






export default OrgApacheJackrabbitOakPluginsIndexLuceneLuceneIndexProviderServProperties;

