/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties model module.
 * @module model/OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties
 * @version 1.0.0
 */
class OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties {
    /**
     * Constructs a new <code>OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties</code>.
     * @alias module:model/OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties
     */
    constructor() { 
        
        OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties} obj Optional instance to populate.
     * @return {module:model/OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties} The populated <code>OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties();

            if (data.hasOwnProperty('tokenExpiration')) {
                obj['tokenExpiration'] = ConfigNodePropertyString.constructFromObject(data['tokenExpiration']);
            }
            if (data.hasOwnProperty('tokenLength')) {
                obj['tokenLength'] = ConfigNodePropertyString.constructFromObject(data['tokenLength']);
            }
            if (data.hasOwnProperty('tokenRefresh')) {
                obj['tokenRefresh'] = ConfigNodePropertyBoolean.constructFromObject(data['tokenRefresh']);
            }
            if (data.hasOwnProperty('tokenCleanupThreshold')) {
                obj['tokenCleanupThreshold'] = ConfigNodePropertyInteger.constructFromObject(data['tokenCleanupThreshold']);
            }
            if (data.hasOwnProperty('passwordHashAlgorithm')) {
                obj['passwordHashAlgorithm'] = ConfigNodePropertyString.constructFromObject(data['passwordHashAlgorithm']);
            }
            if (data.hasOwnProperty('passwordHashIterations')) {
                obj['passwordHashIterations'] = ConfigNodePropertyInteger.constructFromObject(data['passwordHashIterations']);
            }
            if (data.hasOwnProperty('passwordSaltSize')) {
                obj['passwordSaltSize'] = ConfigNodePropertyInteger.constructFromObject(data['passwordSaltSize']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyString} tokenExpiration
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['tokenExpiration'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} tokenLength
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['tokenLength'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} tokenRefresh
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['tokenRefresh'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} tokenCleanupThreshold
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['tokenCleanupThreshold'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} passwordHashAlgorithm
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['passwordHashAlgorithm'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} passwordHashIterations
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['passwordHashIterations'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} passwordSaltSize
 */
OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties.prototype['passwordSaltSize'] = undefined;






export default OrgApacheJackrabbitOakSecurityAuthenticationTokenTokenConfiguraProperties;

