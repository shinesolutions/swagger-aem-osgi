/**
 * Adobe Experience Manager OSGI config (AEM) API
 * Swagger AEM OSGI is an OpenAPI specification for Adobe Experience Manager (AEM) OSGI Configurations API
 *
 * The version of the OpenAPI document: 1.0.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigNodePropertyArray from './ConfigNodePropertyArray';
import ConfigNodePropertyBoolean from './ConfigNodePropertyBoolean';
import ConfigNodePropertyDropDown from './ConfigNodePropertyDropDown';
import ConfigNodePropertyInteger from './ConfigNodePropertyInteger';
import ConfigNodePropertyString from './ConfigNodePropertyString';

/**
 * The OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties model module.
 * @module model/OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties
 * @version 1.0.0
 */
class OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties {
    /**
     * Constructs a new <code>OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties</code>.
     * @alias module:model/OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties
     */
    constructor() { 
        
        OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties} obj Optional instance to populate.
     * @return {module:model/OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties} The populated <code>OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties();

            if (data.hasOwnProperty('org.apache.sling.installer.configuration.persist')) {
                obj['org.apache.sling.installer.configuration.persist'] = ConfigNodePropertyBoolean.constructFromObject(data['org.apache.sling.installer.configuration.persist']);
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ConfigNodePropertyDropDown.constructFromObject(data['mode']);
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ConfigNodePropertyInteger.constructFromObject(data['port']);
            }
            if (data.hasOwnProperty('primary.host')) {
                obj['primary.host'] = ConfigNodePropertyString.constructFromObject(data['primary.host']);
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ConfigNodePropertyInteger.constructFromObject(data['interval']);
            }
            if (data.hasOwnProperty('primary.allowed-client-ip-ranges')) {
                obj['primary.allowed-client-ip-ranges'] = ConfigNodePropertyArray.constructFromObject(data['primary.allowed-client-ip-ranges']);
            }
            if (data.hasOwnProperty('secure')) {
                obj['secure'] = ConfigNodePropertyBoolean.constructFromObject(data['secure']);
            }
            if (data.hasOwnProperty('standby.readtimeout')) {
                obj['standby.readtimeout'] = ConfigNodePropertyInteger.constructFromObject(data['standby.readtimeout']);
            }
            if (data.hasOwnProperty('standby.autoclean')) {
                obj['standby.autoclean'] = ConfigNodePropertyBoolean.constructFromObject(data['standby.autoclean']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ConfigNodePropertyBoolean} org.apache.sling.installer.configuration.persist
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['org.apache.sling.installer.configuration.persist'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyDropDown} mode
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['mode'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} port
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['port'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyString} primary.host
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['primary.host'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} interval
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['interval'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyArray} primary.allowed-client-ip-ranges
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['primary.allowed-client-ip-ranges'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} secure
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['secure'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyInteger} standby.readtimeout
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['standby.readtimeout'] = undefined;

/**
 * @member {module:model/ConfigNodePropertyBoolean} standby.autoclean
 */
OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties.prototype['standby.autoclean'] = undefined;






export default OrgApacheJackrabbitOakSegmentStandbyStoreStandbyStoreServiceProperties;

